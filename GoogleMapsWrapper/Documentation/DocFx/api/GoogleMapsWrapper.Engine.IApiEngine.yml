### YamlMime:ManagedReference
items:
- uid: GoogleMapsWrapper.Engine.IApiEngine
  commentId: T:GoogleMapsWrapper.Engine.IApiEngine
  id: IApiEngine
  parent: GoogleMapsWrapper.Engine
  children:
  - GoogleMapsWrapper.Engine.IApiEngine.BaseUrl
  - GoogleMapsWrapper.Engine.IApiEngine.GetBytesAsync(GoogleMapsWrapper.Requests.IRequest)
  - GoogleMapsWrapper.Engine.IApiEngine.GetJsonAsync(GoogleMapsWrapper.Requests.IRequest)
  langs:
  - csharp
  - vb
  name: IApiEngine
  nameWithType: IApiEngine
  fullName: GoogleMapsWrapper.Engine.IApiEngine
  type: Interface
  source:
    remote:
      path: GoogleMapsWrapper/Engine/IApiEngine.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: IApiEngine
    path: ../../Engine/IApiEngine.cs
    startLine: 10
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Engine
  syntax:
    content: public interface IApiEngine
    content.vb: Public Interface IApiEngine
- uid: GoogleMapsWrapper.Engine.IApiEngine.GetJsonAsync(GoogleMapsWrapper.Requests.IRequest)
  commentId: M:GoogleMapsWrapper.Engine.IApiEngine.GetJsonAsync(GoogleMapsWrapper.Requests.IRequest)
  id: GetJsonAsync(GoogleMapsWrapper.Requests.IRequest)
  parent: GoogleMapsWrapper.Engine.IApiEngine
  langs:
  - csharp
  - vb
  name: GetJsonAsync(IRequest)
  nameWithType: IApiEngine.GetJsonAsync(IRequest)
  fullName: GoogleMapsWrapper.Engine.IApiEngine.GetJsonAsync(GoogleMapsWrapper.Requests.IRequest)
  type: Method
  source:
    remote:
      path: GoogleMapsWrapper/Engine/IApiEngine.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: GetJsonAsync
    path: ../../Engine/IApiEngine.cs
    startLine: 12
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Engine
  syntax:
    content: Task<IResponse<JsonDocument>> GetJsonAsync(IRequest request)
    parameters:
    - id: request
      type: GoogleMapsWrapper.Requests.IRequest
    return:
      type: System.Threading.Tasks.Task{GoogleMapsWrapper.Responses.IResponse{System.Text.Json.JsonDocument}}
    content.vb: Function GetJsonAsync(request As IRequest) As Task(Of IResponse(Of JsonDocument))
  overload: GoogleMapsWrapper.Engine.IApiEngine.GetJsonAsync*
- uid: GoogleMapsWrapper.Engine.IApiEngine.GetBytesAsync(GoogleMapsWrapper.Requests.IRequest)
  commentId: M:GoogleMapsWrapper.Engine.IApiEngine.GetBytesAsync(GoogleMapsWrapper.Requests.IRequest)
  id: GetBytesAsync(GoogleMapsWrapper.Requests.IRequest)
  parent: GoogleMapsWrapper.Engine.IApiEngine
  langs:
  - csharp
  - vb
  name: GetBytesAsync(IRequest)
  nameWithType: IApiEngine.GetBytesAsync(IRequest)
  fullName: GoogleMapsWrapper.Engine.IApiEngine.GetBytesAsync(GoogleMapsWrapper.Requests.IRequest)
  type: Method
  source:
    remote:
      path: GoogleMapsWrapper/Engine/IApiEngine.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: GetBytesAsync
    path: ../../Engine/IApiEngine.cs
    startLine: 13
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Engine
  syntax:
    content: Task<IResponse<byte[]>> GetBytesAsync(IRequest request)
    parameters:
    - id: request
      type: GoogleMapsWrapper.Requests.IRequest
    return:
      type: System.Threading.Tasks.Task{GoogleMapsWrapper.Responses.IResponse{System.Byte[]}}
    content.vb: Function GetBytesAsync(request As IRequest) As Task(Of IResponse(Of Byte()))
  overload: GoogleMapsWrapper.Engine.IApiEngine.GetBytesAsync*
- uid: GoogleMapsWrapper.Engine.IApiEngine.BaseUrl
  commentId: P:GoogleMapsWrapper.Engine.IApiEngine.BaseUrl
  id: BaseUrl
  parent: GoogleMapsWrapper.Engine.IApiEngine
  langs:
  - csharp
  - vb
  name: BaseUrl
  nameWithType: IApiEngine.BaseUrl
  fullName: GoogleMapsWrapper.Engine.IApiEngine.BaseUrl
  type: Property
  source:
    remote:
      path: GoogleMapsWrapper/Engine/IApiEngine.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: BaseUrl
    path: ../../Engine/IApiEngine.cs
    startLine: 14
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Engine
  syntax:
    content: string BaseUrl { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property BaseUrl As String
  overload: GoogleMapsWrapper.Engine.IApiEngine.BaseUrl*
references:
- uid: GoogleMapsWrapper.Engine
  commentId: N:GoogleMapsWrapper.Engine
  href: GoogleMapsWrapper.html
  name: GoogleMapsWrapper.Engine
  nameWithType: GoogleMapsWrapper.Engine
  fullName: GoogleMapsWrapper.Engine
  spec.csharp:
  - uid: GoogleMapsWrapper
    name: GoogleMapsWrapper
    href: GoogleMapsWrapper.html
  - name: .
  - uid: GoogleMapsWrapper.Engine
    name: Engine
    href: GoogleMapsWrapper.Engine.html
  spec.vb:
  - uid: GoogleMapsWrapper
    name: GoogleMapsWrapper
    href: GoogleMapsWrapper.html
  - name: .
  - uid: GoogleMapsWrapper.Engine
    name: Engine
    href: GoogleMapsWrapper.Engine.html
- uid: GoogleMapsWrapper.Engine.IApiEngine.GetJsonAsync*
  commentId: Overload:GoogleMapsWrapper.Engine.IApiEngine.GetJsonAsync
  href: GoogleMapsWrapper.Engine.IApiEngine.html#GoogleMapsWrapper_Engine_IApiEngine_GetJsonAsync_GoogleMapsWrapper_Requests_IRequest_
  name: GetJsonAsync
  nameWithType: IApiEngine.GetJsonAsync
  fullName: GoogleMapsWrapper.Engine.IApiEngine.GetJsonAsync
- uid: GoogleMapsWrapper.Requests.IRequest
  commentId: T:GoogleMapsWrapper.Requests.IRequest
  parent: GoogleMapsWrapper.Requests
  href: GoogleMapsWrapper.Requests.IRequest.html
  name: IRequest
  nameWithType: IRequest
  fullName: GoogleMapsWrapper.Requests.IRequest
- uid: System.Threading.Tasks.Task{GoogleMapsWrapper.Responses.IResponse{System.Text.Json.JsonDocument}}
  commentId: T:System.Threading.Tasks.Task{GoogleMapsWrapper.Responses.IResponse{System.Text.Json.JsonDocument}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IResponse<JsonDocument>>
  nameWithType: Task<IResponse<JsonDocument>>
  fullName: System.Threading.Tasks.Task<GoogleMapsWrapper.Responses.IResponse<System.Text.Json.JsonDocument>>
  nameWithType.vb: Task(Of IResponse(Of JsonDocument))
  fullName.vb: System.Threading.Tasks.Task(Of GoogleMapsWrapper.Responses.IResponse(Of System.Text.Json.JsonDocument))
  name.vb: Task(Of IResponse(Of JsonDocument))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: GoogleMapsWrapper.Responses.IResponse`1
    name: IResponse
    href: GoogleMapsWrapper.Responses.IResponse-1.html
  - name: <
  - uid: System.Text.Json.JsonDocument
    name: JsonDocument
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.jsondocument
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: GoogleMapsWrapper.Responses.IResponse`1
    name: IResponse
    href: GoogleMapsWrapper.Responses.IResponse-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.Text.Json.JsonDocument
    name: JsonDocument
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.jsondocument
  - name: )
  - name: )
- uid: GoogleMapsWrapper.Requests
  commentId: N:GoogleMapsWrapper.Requests
  href: GoogleMapsWrapper.html
  name: GoogleMapsWrapper.Requests
  nameWithType: GoogleMapsWrapper.Requests
  fullName: GoogleMapsWrapper.Requests
  spec.csharp:
  - uid: GoogleMapsWrapper
    name: GoogleMapsWrapper
    href: GoogleMapsWrapper.html
  - name: .
  - uid: GoogleMapsWrapper.Requests
    name: Requests
    href: GoogleMapsWrapper.Requests.html
  spec.vb:
  - uid: GoogleMapsWrapper
    name: GoogleMapsWrapper
    href: GoogleMapsWrapper.html
  - name: .
  - uid: GoogleMapsWrapper.Requests
    name: Requests
    href: GoogleMapsWrapper.Requests.html
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: GoogleMapsWrapper.Engine.IApiEngine.GetBytesAsync*
  commentId: Overload:GoogleMapsWrapper.Engine.IApiEngine.GetBytesAsync
  href: GoogleMapsWrapper.Engine.IApiEngine.html#GoogleMapsWrapper_Engine_IApiEngine_GetBytesAsync_GoogleMapsWrapper_Requests_IRequest_
  name: GetBytesAsync
  nameWithType: IApiEngine.GetBytesAsync
  fullName: GoogleMapsWrapper.Engine.IApiEngine.GetBytesAsync
- uid: System.Threading.Tasks.Task{GoogleMapsWrapper.Responses.IResponse{System.Byte[]}}
  commentId: T:System.Threading.Tasks.Task{GoogleMapsWrapper.Responses.IResponse{System.Byte[]}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IResponse<byte[]>>
  nameWithType: Task<IResponse<byte[]>>
  fullName: System.Threading.Tasks.Task<GoogleMapsWrapper.Responses.IResponse<byte[]>>
  nameWithType.vb: Task(Of IResponse(Of Byte()))
  fullName.vb: System.Threading.Tasks.Task(Of GoogleMapsWrapper.Responses.IResponse(Of Byte()))
  name.vb: Task(Of IResponse(Of Byte()))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: GoogleMapsWrapper.Responses.IResponse`1
    name: IResponse
    href: GoogleMapsWrapper.Responses.IResponse-1.html
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: GoogleMapsWrapper.Responses.IResponse`1
    name: IResponse
    href: GoogleMapsWrapper.Responses.IResponse-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: )
  - name: )
- uid: GoogleMapsWrapper.Engine.IApiEngine.BaseUrl*
  commentId: Overload:GoogleMapsWrapper.Engine.IApiEngine.BaseUrl
  href: GoogleMapsWrapper.Engine.IApiEngine.html#GoogleMapsWrapper_Engine_IApiEngine_BaseUrl
  name: BaseUrl
  nameWithType: IApiEngine.BaseUrl
  fullName: GoogleMapsWrapper.Engine.IApiEngine.BaseUrl
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System

### YamlMime:ManagedReference
items:
- uid: GoogleMapsWrapper.Api.GeocodeApi
  commentId: T:GoogleMapsWrapper.Api.GeocodeApi
  id: GeocodeApi
  parent: GoogleMapsWrapper.Api
  children:
  - GoogleMapsWrapper.Api.GeocodeApi.#ctor(GoogleMapsWrapper.Engine.IApiEngine)
  - GoogleMapsWrapper.Api.GeocodeApi.ApiType
  - GoogleMapsWrapper.Api.GeocodeApi.GeocodeAsync(GoogleMapsWrapper.Types.GpsCoordinate,System.String)
  - GoogleMapsWrapper.Api.GeocodeApi.GeocodeAsync(System.String,System.String,System.String)
  - GoogleMapsWrapper.Api.GeocodeApi.GeocodeParseAsync(GoogleMapsWrapper.Types.GpsCoordinate,System.String)
  - GoogleMapsWrapper.Api.GeocodeApi.GeocodeParseAsync(System.String,System.String,System.String)
  - GoogleMapsWrapper.Api.GeocodeApi.GetElevationAsync(GoogleMapsWrapper.Types.GpsCoordinate,System.String)
  - GoogleMapsWrapper.Api.GeocodeApi.GetElevationAsync(System.String,System.String,System.String)
  - GoogleMapsWrapper.Api.GeocodeApi.GetElevationParsedAsync(GoogleMapsWrapper.Types.GpsCoordinate,System.String)
  - GoogleMapsWrapper.Api.GeocodeApi.GetElevationParsedAsync(System.String,System.String,System.String)
  langs:
  - csharp
  - vb
  name: GeocodeApi
  nameWithType: GeocodeApi
  fullName: GoogleMapsWrapper.Api.GeocodeApi
  type: Class
  source:
    remote:
      path: GoogleMapsApi/Api/GeocodeApi.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: GeocodeApi
    path: ../../Api/GeocodeApi.cs
    startLine: 18
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Api
  summary: Provides methods for retrieiving data from Google's Geocoding API.
  example: []
  syntax:
    content: public class GeocodeApi
    content.vb: Public Class GeocodeApi
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: GoogleMapsWrapper.Api.GeocodeApi.ApiType
  commentId: P:GoogleMapsWrapper.Api.GeocodeApi.ApiType
  id: ApiType
  parent: GoogleMapsWrapper.Api.GeocodeApi
  langs:
  - csharp
  - vb
  name: ApiType
  nameWithType: GeocodeApi.ApiType
  fullName: GoogleMapsWrapper.Api.GeocodeApi.ApiType
  type: Property
  source:
    remote:
      path: GoogleMapsApi/Api/GeocodeApi.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: ApiType
    path: ../../Api/GeocodeApi.cs
    startLine: 21
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Api
  syntax:
    content: public ApiTypes ApiType { get; }
    parameters: []
    return:
      type: GoogleMapsWrapper.Types.ApiTypes
    content.vb: Public Property ApiType As ApiTypes
  overload: GoogleMapsWrapper.Api.GeocodeApi.ApiType*
- uid: GoogleMapsWrapper.Api.GeocodeApi.#ctor(GoogleMapsWrapper.Engine.IApiEngine)
  commentId: M:GoogleMapsWrapper.Api.GeocodeApi.#ctor(GoogleMapsWrapper.Engine.IApiEngine)
  id: '#ctor(GoogleMapsWrapper.Engine.IApiEngine)'
  parent: GoogleMapsWrapper.Api.GeocodeApi
  langs:
  - csharp
  - vb
  name: GeocodeApi(IApiEngine)
  nameWithType: GeocodeApi.GeocodeApi(IApiEngine)
  fullName: GoogleMapsWrapper.Api.GeocodeApi.GeocodeApi(GoogleMapsWrapper.Engine.IApiEngine)
  type: Constructor
  source:
    remote:
      path: GoogleMapsApi/Api/GeocodeApi.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: .ctor
    path: ../../Api/GeocodeApi.cs
    startLine: 28
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Api
  summary: Initializes a new instance of the <xref href="GoogleMapsWrapper.Api.GeocodeApi" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public GeocodeApi(IApiEngine engine)
    parameters:
    - id: engine
      type: GoogleMapsWrapper.Engine.IApiEngine
      description: An instance of the API engine.
    content.vb: Public Sub New(engine As IApiEngine)
  overload: GoogleMapsWrapper.Api.GeocodeApi.#ctor*
  nameWithType.vb: GeocodeApi.New(IApiEngine)
  fullName.vb: GoogleMapsWrapper.Api.GeocodeApi.New(GoogleMapsWrapper.Engine.IApiEngine)
  name.vb: New(IApiEngine)
- uid: GoogleMapsWrapper.Api.GeocodeApi.GeocodeAsync(System.String,System.String,System.String)
  commentId: M:GoogleMapsWrapper.Api.GeocodeApi.GeocodeAsync(System.String,System.String,System.String)
  id: GeocodeAsync(System.String,System.String,System.String)
  parent: GoogleMapsWrapper.Api.GeocodeApi
  langs:
  - csharp
  - vb
  name: GeocodeAsync(string, string, string?)
  nameWithType: GeocodeApi.GeocodeAsync(string, string, string?)
  fullName: GoogleMapsWrapper.Api.GeocodeApi.GeocodeAsync(string, string, string?)
  type: Method
  source:
    remote:
      path: GoogleMapsApi/Api/GeocodeApi.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: GeocodeAsync
    path: ../../Api/GeocodeApi.cs
    startLine: 41
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Api
  summary: Makes a request to the API endpoint for geocoding a lat/lng coordinate./&gt;
  example: []
  syntax:
    content: public Task<IResponse<JsonDocument>> GeocodeAsync(string latitude, string longitude, string? identifier = null)
    parameters:
    - id: latitude
      type: System.String
      description: Decimal degrees gps latitude.
    - id: longitude
      type: System.String
      description: Decimal degrees gps longitude.
    - id: identifier
      type: System.String
      description: A string appended to the request object for tracking or identification.
    return:
      type: System.Threading.Tasks.Task{GoogleMapsWrapper.Responses.IResponse{System.Text.Json.JsonDocument}}
      description: An <xref href="GoogleMapsWrapper.Responses.IResponse%601" data-throw-if-not-resolved="false"></xref> containing the raw JSON response from the Google API.
    content.vb: Public Function GeocodeAsync(latitude As String, longitude As String, identifier As String = Nothing) As Task(Of IResponse(Of JsonDocument))
  overload: GoogleMapsWrapper.Api.GeocodeApi.GeocodeAsync*
  nameWithType.vb: GeocodeApi.GeocodeAsync(String, String, String)
  fullName.vb: GoogleMapsWrapper.Api.GeocodeApi.GeocodeAsync(String, String, String)
  name.vb: GeocodeAsync(String, String, String)
- uid: GoogleMapsWrapper.Api.GeocodeApi.GeocodeAsync(GoogleMapsWrapper.Types.GpsCoordinate,System.String)
  commentId: M:GoogleMapsWrapper.Api.GeocodeApi.GeocodeAsync(GoogleMapsWrapper.Types.GpsCoordinate,System.String)
  id: GeocodeAsync(GoogleMapsWrapper.Types.GpsCoordinate,System.String)
  parent: GoogleMapsWrapper.Api.GeocodeApi
  langs:
  - csharp
  - vb
  name: GeocodeAsync(GpsCoordinate, string?)
  nameWithType: GeocodeApi.GeocodeAsync(GpsCoordinate, string?)
  fullName: GoogleMapsWrapper.Api.GeocodeApi.GeocodeAsync(GoogleMapsWrapper.Types.GpsCoordinate, string?)
  type: Method
  source:
    remote:
      path: GoogleMapsApi/Api/GeocodeApi.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: GeocodeAsync
    path: ../../Api/GeocodeApi.cs
    startLine: 54
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Api
  summary: Makes a request to the API endpoint for geocoding a lat/lng coordinate./&gt;
  example: []
  syntax:
    content: public Task<IResponse<JsonDocument>> GeocodeAsync(GpsCoordinate coordinate, string? identifier = null)
    parameters:
    - id: coordinate
      type: GoogleMapsWrapper.Types.GpsCoordinate
      description: GpsCoordinate to target the request.
    - id: identifier
      type: System.String
      description: A string appended to the request object for tracking or identification.
    return:
      type: System.Threading.Tasks.Task{GoogleMapsWrapper.Responses.IResponse{System.Text.Json.JsonDocument}}
      description: An <xref href="GoogleMapsWrapper.Responses.IResponse%601" data-throw-if-not-resolved="false"></xref> containing the raw JSON response from the Google API.
    content.vb: Public Function GeocodeAsync(coordinate As GpsCoordinate, identifier As String = Nothing) As Task(Of IResponse(Of JsonDocument))
  overload: GoogleMapsWrapper.Api.GeocodeApi.GeocodeAsync*
  nameWithType.vb: GeocodeApi.GeocodeAsync(GpsCoordinate, String)
  fullName.vb: GoogleMapsWrapper.Api.GeocodeApi.GeocodeAsync(GoogleMapsWrapper.Types.GpsCoordinate, String)
  name.vb: GeocodeAsync(GpsCoordinate, String)
- uid: GoogleMapsWrapper.Api.GeocodeApi.GeocodeParseAsync(System.String,System.String,System.String)
  commentId: M:GoogleMapsWrapper.Api.GeocodeApi.GeocodeParseAsync(System.String,System.String,System.String)
  id: GeocodeParseAsync(System.String,System.String,System.String)
  parent: GoogleMapsWrapper.Api.GeocodeApi
  langs:
  - csharp
  - vb
  name: GeocodeParseAsync(string, string, string?)
  nameWithType: GeocodeApi.GeocodeParseAsync(string, string, string?)
  fullName: GoogleMapsWrapper.Api.GeocodeApi.GeocodeParseAsync(string, string, string?)
  type: Method
  source:
    remote:
      path: GoogleMapsApi/Api/GeocodeApi.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: GeocodeParseAsync
    path: ../../Api/GeocodeApi.cs
    startLine: 75
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Api
  summary: Makes a request to the API endpoint for geocoding a lat/lng coordinate./&gt;
  example: []
  syntax:
    content: public Task<GeocodeContainer> GeocodeParseAsync(string latitude, string longitude, string? identifier = null)
    parameters:
    - id: latitude
      type: System.String
      description: Decimal degrees gps latitude.
    - id: longitude
      type: System.String
      description: Decimal degrees gps longitude.
    - id: identifier
      type: System.String
      description: A string appended to the request object for tracking or identification.
    return:
      type: System.Threading.Tasks.Task{GoogleMapsWrapper.Containers.GeocodeContainer}
      description: A <xref href="GoogleMapsWrapper.Containers.GeocodeContainer" data-throw-if-not-resolved="false"></xref> holding data parsed from <xref href="GoogleMapsWrapper.Parsers.GeocodeParser" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function GeocodeParseAsync(latitude As String, longitude As String, identifier As String = Nothing) As Task(Of GeocodeContainer)
  overload: GoogleMapsWrapper.Api.GeocodeApi.GeocodeParseAsync*
  nameWithType.vb: GeocodeApi.GeocodeParseAsync(String, String, String)
  fullName.vb: GoogleMapsWrapper.Api.GeocodeApi.GeocodeParseAsync(String, String, String)
  name.vb: GeocodeParseAsync(String, String, String)
- uid: GoogleMapsWrapper.Api.GeocodeApi.GeocodeParseAsync(GoogleMapsWrapper.Types.GpsCoordinate,System.String)
  commentId: M:GoogleMapsWrapper.Api.GeocodeApi.GeocodeParseAsync(GoogleMapsWrapper.Types.GpsCoordinate,System.String)
  id: GeocodeParseAsync(GoogleMapsWrapper.Types.GpsCoordinate,System.String)
  parent: GoogleMapsWrapper.Api.GeocodeApi
  langs:
  - csharp
  - vb
  name: GeocodeParseAsync(GpsCoordinate, string?)
  nameWithType: GeocodeApi.GeocodeParseAsync(GpsCoordinate, string?)
  fullName: GoogleMapsWrapper.Api.GeocodeApi.GeocodeParseAsync(GoogleMapsWrapper.Types.GpsCoordinate, string?)
  type: Method
  source:
    remote:
      path: GoogleMapsApi/Api/GeocodeApi.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: GeocodeParseAsync
    path: ../../Api/GeocodeApi.cs
    startLine: 88
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Api
  summary: Makes a request to the API endpoint for geocoding a lat/lng coordinate./&gt;
  example: []
  syntax:
    content: public Task<GeocodeContainer> GeocodeParseAsync(GpsCoordinate coordinate, string? identifier = null)
    parameters:
    - id: coordinate
      type: GoogleMapsWrapper.Types.GpsCoordinate
      description: GpsCoordinate to target the request.
    - id: identifier
      type: System.String
      description: A string appended to the request object for tracking or identification.
    return:
      type: System.Threading.Tasks.Task{GoogleMapsWrapper.Containers.GeocodeContainer}
      description: A <xref href="GoogleMapsWrapper.Containers.GeocodeContainer" data-throw-if-not-resolved="false"></xref> holding data parsed from <xref href="GoogleMapsWrapper.Parsers.GeocodeParser" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function GeocodeParseAsync(coordinate As GpsCoordinate, identifier As String = Nothing) As Task(Of GeocodeContainer)
  overload: GoogleMapsWrapper.Api.GeocodeApi.GeocodeParseAsync*
  nameWithType.vb: GeocodeApi.GeocodeParseAsync(GpsCoordinate, String)
  fullName.vb: GoogleMapsWrapper.Api.GeocodeApi.GeocodeParseAsync(GoogleMapsWrapper.Types.GpsCoordinate, String)
  name.vb: GeocodeParseAsync(GpsCoordinate, String)
- uid: GoogleMapsWrapper.Api.GeocodeApi.GetElevationAsync(System.String,System.String,System.String)
  commentId: M:GoogleMapsWrapper.Api.GeocodeApi.GetElevationAsync(System.String,System.String,System.String)
  id: GetElevationAsync(System.String,System.String,System.String)
  parent: GoogleMapsWrapper.Api.GeocodeApi
  langs:
  - csharp
  - vb
  name: GetElevationAsync(string, string, string?)
  nameWithType: GeocodeApi.GetElevationAsync(string, string, string?)
  fullName: GoogleMapsWrapper.Api.GeocodeApi.GetElevationAsync(string, string, string?)
  type: Method
  source:
    remote:
      path: GoogleMapsApi/Api/GeocodeApi.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: GetElevationAsync
    path: ../../Api/GeocodeApi.cs
    startLine: 102
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Api
  summary: Makes a request to the API endpoint for acquiring elevation data about a lat/lng coordinate./&gt;
  example: []
  syntax:
    content: public Task<IResponse<JsonDocument>> GetElevationAsync(string latitude, string longitude, string? identifier = null)
    parameters:
    - id: latitude
      type: System.String
      description: Decimal degrees gps latitude.
    - id: longitude
      type: System.String
      description: Decimal degrees gps longitude.
    - id: identifier
      type: System.String
      description: A string appended to the request object for tracking or identification.
    return:
      type: System.Threading.Tasks.Task{GoogleMapsWrapper.Responses.IResponse{System.Text.Json.JsonDocument}}
      description: An <xref href="GoogleMapsWrapper.Responses.IResponse%601" data-throw-if-not-resolved="false"></xref> containing the raw JSON response from the Google API.
    content.vb: Public Function GetElevationAsync(latitude As String, longitude As String, identifier As String = Nothing) As Task(Of IResponse(Of JsonDocument))
  overload: GoogleMapsWrapper.Api.GeocodeApi.GetElevationAsync*
  nameWithType.vb: GeocodeApi.GetElevationAsync(String, String, String)
  fullName.vb: GoogleMapsWrapper.Api.GeocodeApi.GetElevationAsync(String, String, String)
  name.vb: GetElevationAsync(String, String, String)
- uid: GoogleMapsWrapper.Api.GeocodeApi.GetElevationAsync(GoogleMapsWrapper.Types.GpsCoordinate,System.String)
  commentId: M:GoogleMapsWrapper.Api.GeocodeApi.GetElevationAsync(GoogleMapsWrapper.Types.GpsCoordinate,System.String)
  id: GetElevationAsync(GoogleMapsWrapper.Types.GpsCoordinate,System.String)
  parent: GoogleMapsWrapper.Api.GeocodeApi
  langs:
  - csharp
  - vb
  name: GetElevationAsync(GpsCoordinate, string?)
  nameWithType: GeocodeApi.GetElevationAsync(GpsCoordinate, string?)
  fullName: GoogleMapsWrapper.Api.GeocodeApi.GetElevationAsync(GoogleMapsWrapper.Types.GpsCoordinate, string?)
  type: Method
  source:
    remote:
      path: GoogleMapsApi/Api/GeocodeApi.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: GetElevationAsync
    path: ../../Api/GeocodeApi.cs
    startLine: 115
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Api
  summary: Makes a request to the API endpoint for acquiring elevation data about a lat/lng coordinate./&gt;
  example: []
  syntax:
    content: public Task<IResponse<JsonDocument>> GetElevationAsync(GpsCoordinate coordinate, string? identifier = null)
    parameters:
    - id: coordinate
      type: GoogleMapsWrapper.Types.GpsCoordinate
      description: GpsCoordinate to target the request about.
    - id: identifier
      type: System.String
      description: A string appended to the request object for tracking or identification.
    return:
      type: System.Threading.Tasks.Task{GoogleMapsWrapper.Responses.IResponse{System.Text.Json.JsonDocument}}
      description: An <xref href="GoogleMapsWrapper.Responses.IResponse%601" data-throw-if-not-resolved="false"></xref> containing the raw JSON response from the Google API.
    content.vb: Public Function GetElevationAsync(coordinate As GpsCoordinate, identifier As String = Nothing) As Task(Of IResponse(Of JsonDocument))
  overload: GoogleMapsWrapper.Api.GeocodeApi.GetElevationAsync*
  nameWithType.vb: GeocodeApi.GetElevationAsync(GpsCoordinate, String)
  fullName.vb: GoogleMapsWrapper.Api.GeocodeApi.GetElevationAsync(GoogleMapsWrapper.Types.GpsCoordinate, String)
  name.vb: GetElevationAsync(GpsCoordinate, String)
- uid: GoogleMapsWrapper.Api.GeocodeApi.GetElevationParsedAsync(System.String,System.String,System.String)
  commentId: M:GoogleMapsWrapper.Api.GeocodeApi.GetElevationParsedAsync(System.String,System.String,System.String)
  id: GetElevationParsedAsync(System.String,System.String,System.String)
  parent: GoogleMapsWrapper.Api.GeocodeApi
  langs:
  - csharp
  - vb
  name: GetElevationParsedAsync(string, string, string?)
  nameWithType: GeocodeApi.GetElevationParsedAsync(string, string, string?)
  fullName: GoogleMapsWrapper.Api.GeocodeApi.GetElevationParsedAsync(string, string, string?)
  type: Method
  source:
    remote:
      path: GoogleMapsApi/Api/GeocodeApi.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: GetElevationParsedAsync
    path: ../../Api/GeocodeApi.cs
    startLine: 131
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Api
  summary: Makes a request to the API endpoint for acquiring elevation data about a lat/lng coordinate./&gt;
  example: []
  syntax:
    content: public Task<ElevationContainer> GetElevationParsedAsync(string latitude, string longitude, string? identifier = null)
    parameters:
    - id: latitude
      type: System.String
      description: Decimal degrees gps latitude.
    - id: longitude
      type: System.String
      description: Decimal degrees gps longitude.
    - id: identifier
      type: System.String
      description: A string appended to the request for tracking or identification.
    return:
      type: System.Threading.Tasks.Task{GoogleMapsWrapper.Containers.ElevationContainer}
      description: An <xref href="GoogleMapsWrapper.Containers.ElevationContainer" data-throw-if-not-resolved="false"></xref> holding data parsed from <xref href="GoogleMapsWrapper.Parsers.ElevationParser" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function GetElevationParsedAsync(latitude As String, longitude As String, identifier As String = Nothing) As Task(Of ElevationContainer)
  overload: GoogleMapsWrapper.Api.GeocodeApi.GetElevationParsedAsync*
  nameWithType.vb: GeocodeApi.GetElevationParsedAsync(String, String, String)
  fullName.vb: GoogleMapsWrapper.Api.GeocodeApi.GetElevationParsedAsync(String, String, String)
  name.vb: GetElevationParsedAsync(String, String, String)
- uid: GoogleMapsWrapper.Api.GeocodeApi.GetElevationParsedAsync(GoogleMapsWrapper.Types.GpsCoordinate,System.String)
  commentId: M:GoogleMapsWrapper.Api.GeocodeApi.GetElevationParsedAsync(GoogleMapsWrapper.Types.GpsCoordinate,System.String)
  id: GetElevationParsedAsync(GoogleMapsWrapper.Types.GpsCoordinate,System.String)
  parent: GoogleMapsWrapper.Api.GeocodeApi
  langs:
  - csharp
  - vb
  name: GetElevationParsedAsync(GpsCoordinate, string?)
  nameWithType: GeocodeApi.GetElevationParsedAsync(GpsCoordinate, string?)
  fullName: GoogleMapsWrapper.Api.GeocodeApi.GetElevationParsedAsync(GoogleMapsWrapper.Types.GpsCoordinate, string?)
  type: Method
  source:
    remote:
      path: GoogleMapsApi/Api/GeocodeApi.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: GetElevationParsedAsync
    path: ../../Api/GeocodeApi.cs
    startLine: 144
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Api
  summary: Makes a request to the API endpoint for acquiring elevation data about a lat/lng coordinate./&gt;
  example: []
  syntax:
    content: public Task<ElevationContainer> GetElevationParsedAsync(GpsCoordinate coordinate, string? identifier = null)
    parameters:
    - id: coordinate
      type: GoogleMapsWrapper.Types.GpsCoordinate
      description: GpsCoordinate to target the request about.
    - id: identifier
      type: System.String
      description: A string appended to the request object for tracking or identification.
    return:
      type: System.Threading.Tasks.Task{GoogleMapsWrapper.Containers.ElevationContainer}
      description: An <xref href="GoogleMapsWrapper.Containers.ElevationContainer" data-throw-if-not-resolved="false"></xref> holding data parsed from <xref href="GoogleMapsWrapper.Parsers.ElevationParser" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function GetElevationParsedAsync(coordinate As GpsCoordinate, identifier As String = Nothing) As Task(Of ElevationContainer)
  overload: GoogleMapsWrapper.Api.GeocodeApi.GetElevationParsedAsync*
  nameWithType.vb: GeocodeApi.GetElevationParsedAsync(GpsCoordinate, String)
  fullName.vb: GoogleMapsWrapper.Api.GeocodeApi.GetElevationParsedAsync(GoogleMapsWrapper.Types.GpsCoordinate, String)
  name.vb: GetElevationParsedAsync(GpsCoordinate, String)
references:
- uid: GoogleMapsWrapper.Api
  commentId: N:GoogleMapsWrapper.Api
  href: GoogleMapsWrapper.html
  name: GoogleMapsWrapper.Api
  nameWithType: GoogleMapsWrapper.Api
  fullName: GoogleMapsWrapper.Api
  spec.csharp:
  - uid: GoogleMapsWrapper
    name: GoogleMapsWrapper
    href: GoogleMapsWrapper.html
  - name: .
  - uid: GoogleMapsWrapper.Api
    name: Api
    href: GoogleMapsWrapper.Api.html
  spec.vb:
  - uid: GoogleMapsWrapper
    name: GoogleMapsWrapper
    href: GoogleMapsWrapper.html
  - name: .
  - uid: GoogleMapsWrapper.Api
    name: Api
    href: GoogleMapsWrapper.Api.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: GoogleMapsWrapper.Api.GeocodeApi.ApiType*
  commentId: Overload:GoogleMapsWrapper.Api.GeocodeApi.ApiType
  href: GoogleMapsWrapper.Api.GeocodeApi.html#GoogleMapsWrapper_Api_GeocodeApi_ApiType
  name: ApiType
  nameWithType: GeocodeApi.ApiType
  fullName: GoogleMapsWrapper.Api.GeocodeApi.ApiType
- uid: GoogleMapsWrapper.Types.ApiTypes
  commentId: T:GoogleMapsWrapper.Types.ApiTypes
  parent: GoogleMapsWrapper.Types
  href: GoogleMapsWrapper.Types.ApiTypes.html
  name: ApiTypes
  nameWithType: ApiTypes
  fullName: GoogleMapsWrapper.Types.ApiTypes
- uid: GoogleMapsWrapper.Types
  commentId: N:GoogleMapsWrapper.Types
  href: GoogleMapsWrapper.html
  name: GoogleMapsWrapper.Types
  nameWithType: GoogleMapsWrapper.Types
  fullName: GoogleMapsWrapper.Types
  spec.csharp:
  - uid: GoogleMapsWrapper
    name: GoogleMapsWrapper
    href: GoogleMapsWrapper.html
  - name: .
  - uid: GoogleMapsWrapper.Types
    name: Types
    href: GoogleMapsWrapper.Types.html
  spec.vb:
  - uid: GoogleMapsWrapper
    name: GoogleMapsWrapper
    href: GoogleMapsWrapper.html
  - name: .
  - uid: GoogleMapsWrapper.Types
    name: Types
    href: GoogleMapsWrapper.Types.html
- uid: GoogleMapsWrapper.Api.GeocodeApi
  commentId: T:GoogleMapsWrapper.Api.GeocodeApi
  parent: GoogleMapsWrapper.Api
  href: GoogleMapsWrapper.Api.GeocodeApi.html
  name: GeocodeApi
  nameWithType: GeocodeApi
  fullName: GoogleMapsWrapper.Api.GeocodeApi
- uid: GoogleMapsWrapper.Api.GeocodeApi.#ctor*
  commentId: Overload:GoogleMapsWrapper.Api.GeocodeApi.#ctor
  href: GoogleMapsWrapper.Api.GeocodeApi.html#GoogleMapsWrapper_Api_GeocodeApi__ctor_GoogleMapsWrapper_Engine_IApiEngine_
  name: GeocodeApi
  nameWithType: GeocodeApi.GeocodeApi
  fullName: GoogleMapsWrapper.Api.GeocodeApi.GeocodeApi
  nameWithType.vb: GeocodeApi.New
  fullName.vb: GoogleMapsWrapper.Api.GeocodeApi.New
  name.vb: New
- uid: GoogleMapsWrapper.Engine.IApiEngine
  commentId: T:GoogleMapsWrapper.Engine.IApiEngine
  parent: GoogleMapsWrapper.Engine
  href: GoogleMapsWrapper.Engine.IApiEngine.html
  name: IApiEngine
  nameWithType: IApiEngine
  fullName: GoogleMapsWrapper.Engine.IApiEngine
- uid: GoogleMapsWrapper.Engine
  commentId: N:GoogleMapsWrapper.Engine
  href: GoogleMapsWrapper.html
  name: GoogleMapsWrapper.Engine
  nameWithType: GoogleMapsWrapper.Engine
  fullName: GoogleMapsWrapper.Engine
  spec.csharp:
  - uid: GoogleMapsWrapper
    name: GoogleMapsWrapper
    href: GoogleMapsWrapper.html
  - name: .
  - uid: GoogleMapsWrapper.Engine
    name: Engine
    href: GoogleMapsWrapper.Engine.html
  spec.vb:
  - uid: GoogleMapsWrapper
    name: GoogleMapsWrapper
    href: GoogleMapsWrapper.html
  - name: .
  - uid: GoogleMapsWrapper.Engine
    name: Engine
    href: GoogleMapsWrapper.Engine.html
- uid: GoogleMapsWrapper.Responses.IResponse`1
  commentId: T:GoogleMapsWrapper.Responses.IResponse`1
  href: GoogleMapsWrapper.Responses.IResponse-1.html
  name: IResponse<TResponse>
  nameWithType: IResponse<TResponse>
  fullName: GoogleMapsWrapper.Responses.IResponse<TResponse>
  nameWithType.vb: IResponse(Of TResponse)
  fullName.vb: GoogleMapsWrapper.Responses.IResponse(Of TResponse)
  name.vb: IResponse(Of TResponse)
  spec.csharp:
  - uid: GoogleMapsWrapper.Responses.IResponse`1
    name: IResponse
    href: GoogleMapsWrapper.Responses.IResponse-1.html
  - name: <
  - name: TResponse
  - name: '>'
  spec.vb:
  - uid: GoogleMapsWrapper.Responses.IResponse`1
    name: IResponse
    href: GoogleMapsWrapper.Responses.IResponse-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TResponse
  - name: )
- uid: GoogleMapsWrapper.Api.GeocodeApi.GeocodeAsync*
  commentId: Overload:GoogleMapsWrapper.Api.GeocodeApi.GeocodeAsync
  href: GoogleMapsWrapper.Api.GeocodeApi.html#GoogleMapsWrapper_Api_GeocodeApi_GeocodeAsync_System_String_System_String_System_String_
  name: GeocodeAsync
  nameWithType: GeocodeApi.GeocodeAsync
  fullName: GoogleMapsWrapper.Api.GeocodeApi.GeocodeAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task{GoogleMapsWrapper.Responses.IResponse{System.Text.Json.JsonDocument}}
  commentId: T:System.Threading.Tasks.Task{GoogleMapsWrapper.Responses.IResponse{System.Text.Json.JsonDocument}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IResponse<JsonDocument>>
  nameWithType: Task<IResponse<JsonDocument>>
  fullName: System.Threading.Tasks.Task<GoogleMapsWrapper.Responses.IResponse<System.Text.Json.JsonDocument>>
  nameWithType.vb: Task(Of IResponse(Of JsonDocument))
  fullName.vb: System.Threading.Tasks.Task(Of GoogleMapsWrapper.Responses.IResponse(Of System.Text.Json.JsonDocument))
  name.vb: Task(Of IResponse(Of JsonDocument))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: GoogleMapsWrapper.Responses.IResponse`1
    name: IResponse
    href: GoogleMapsWrapper.Responses.IResponse-1.html
  - name: <
  - uid: System.Text.Json.JsonDocument
    name: JsonDocument
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.jsondocument
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: GoogleMapsWrapper.Responses.IResponse`1
    name: IResponse
    href: GoogleMapsWrapper.Responses.IResponse-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.Text.Json.JsonDocument
    name: JsonDocument
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.jsondocument
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: GoogleMapsWrapper.Types.GpsCoordinate
  commentId: T:GoogleMapsWrapper.Types.GpsCoordinate
  parent: GoogleMapsWrapper.Types
  href: GoogleMapsWrapper.Types.GpsCoordinate.html
  name: GpsCoordinate
  nameWithType: GpsCoordinate
  fullName: GoogleMapsWrapper.Types.GpsCoordinate
- uid: GoogleMapsWrapper.Containers.GeocodeContainer
  commentId: T:GoogleMapsWrapper.Containers.GeocodeContainer
  parent: GoogleMapsWrapper.Containers
  href: GoogleMapsWrapper.Containers.GeocodeContainer.html
  name: GeocodeContainer
  nameWithType: GeocodeContainer
  fullName: GoogleMapsWrapper.Containers.GeocodeContainer
- uid: GoogleMapsWrapper.Parsers.GeocodeParser
  commentId: T:GoogleMapsWrapper.Parsers.GeocodeParser
  href: GoogleMapsWrapper.Parsers.GeocodeParser.html
  name: GeocodeParser
  nameWithType: GeocodeParser
  fullName: GoogleMapsWrapper.Parsers.GeocodeParser
- uid: GoogleMapsWrapper.Api.GeocodeApi.GeocodeParseAsync*
  commentId: Overload:GoogleMapsWrapper.Api.GeocodeApi.GeocodeParseAsync
  href: GoogleMapsWrapper.Api.GeocodeApi.html#GoogleMapsWrapper_Api_GeocodeApi_GeocodeParseAsync_System_String_System_String_System_String_
  name: GeocodeParseAsync
  nameWithType: GeocodeApi.GeocodeParseAsync
  fullName: GoogleMapsWrapper.Api.GeocodeApi.GeocodeParseAsync
- uid: System.Threading.Tasks.Task{GoogleMapsWrapper.Containers.GeocodeContainer}
  commentId: T:System.Threading.Tasks.Task{GoogleMapsWrapper.Containers.GeocodeContainer}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<GeocodeContainer>
  nameWithType: Task<GeocodeContainer>
  fullName: System.Threading.Tasks.Task<GoogleMapsWrapper.Containers.GeocodeContainer>
  nameWithType.vb: Task(Of GeocodeContainer)
  fullName.vb: System.Threading.Tasks.Task(Of GoogleMapsWrapper.Containers.GeocodeContainer)
  name.vb: Task(Of GeocodeContainer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: GoogleMapsWrapper.Containers.GeocodeContainer
    name: GeocodeContainer
    href: GoogleMapsWrapper.Containers.GeocodeContainer.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: GoogleMapsWrapper.Containers.GeocodeContainer
    name: GeocodeContainer
    href: GoogleMapsWrapper.Containers.GeocodeContainer.html
  - name: )
- uid: GoogleMapsWrapper.Containers
  commentId: N:GoogleMapsWrapper.Containers
  href: GoogleMapsWrapper.html
  name: GoogleMapsWrapper.Containers
  nameWithType: GoogleMapsWrapper.Containers
  fullName: GoogleMapsWrapper.Containers
  spec.csharp:
  - uid: GoogleMapsWrapper
    name: GoogleMapsWrapper
    href: GoogleMapsWrapper.html
  - name: .
  - uid: GoogleMapsWrapper.Containers
    name: Containers
    href: GoogleMapsWrapper.Containers.html
  spec.vb:
  - uid: GoogleMapsWrapper
    name: GoogleMapsWrapper
    href: GoogleMapsWrapper.html
  - name: .
  - uid: GoogleMapsWrapper.Containers
    name: Containers
    href: GoogleMapsWrapper.Containers.html
- uid: GoogleMapsWrapper.Api.GeocodeApi.GetElevationAsync*
  commentId: Overload:GoogleMapsWrapper.Api.GeocodeApi.GetElevationAsync
  href: GoogleMapsWrapper.Api.GeocodeApi.html#GoogleMapsWrapper_Api_GeocodeApi_GetElevationAsync_System_String_System_String_System_String_
  name: GetElevationAsync
  nameWithType: GeocodeApi.GetElevationAsync
  fullName: GoogleMapsWrapper.Api.GeocodeApi.GetElevationAsync
- uid: GoogleMapsWrapper.Containers.ElevationContainer
  commentId: T:GoogleMapsWrapper.Containers.ElevationContainer
  parent: GoogleMapsWrapper.Containers
  href: GoogleMapsWrapper.Containers.ElevationContainer.html
  name: ElevationContainer
  nameWithType: ElevationContainer
  fullName: GoogleMapsWrapper.Containers.ElevationContainer
- uid: GoogleMapsWrapper.Parsers.ElevationParser
  commentId: T:GoogleMapsWrapper.Parsers.ElevationParser
  href: GoogleMapsWrapper.Parsers.ElevationParser.html
  name: ElevationParser
  nameWithType: ElevationParser
  fullName: GoogleMapsWrapper.Parsers.ElevationParser
- uid: GoogleMapsWrapper.Api.GeocodeApi.GetElevationParsedAsync*
  commentId: Overload:GoogleMapsWrapper.Api.GeocodeApi.GetElevationParsedAsync
  href: GoogleMapsWrapper.Api.GeocodeApi.html#GoogleMapsWrapper_Api_GeocodeApi_GetElevationParsedAsync_System_String_System_String_System_String_
  name: GetElevationParsedAsync
  nameWithType: GeocodeApi.GetElevationParsedAsync
  fullName: GoogleMapsWrapper.Api.GeocodeApi.GetElevationParsedAsync
- uid: System.Threading.Tasks.Task{GoogleMapsWrapper.Containers.ElevationContainer}
  commentId: T:System.Threading.Tasks.Task{GoogleMapsWrapper.Containers.ElevationContainer}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ElevationContainer>
  nameWithType: Task<ElevationContainer>
  fullName: System.Threading.Tasks.Task<GoogleMapsWrapper.Containers.ElevationContainer>
  nameWithType.vb: Task(Of ElevationContainer)
  fullName.vb: System.Threading.Tasks.Task(Of GoogleMapsWrapper.Containers.ElevationContainer)
  name.vb: Task(Of ElevationContainer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: GoogleMapsWrapper.Containers.ElevationContainer
    name: ElevationContainer
    href: GoogleMapsWrapper.Containers.ElevationContainer.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: GoogleMapsWrapper.Containers.ElevationContainer
    name: ElevationContainer
    href: GoogleMapsWrapper.Containers.ElevationContainer.html
  - name: )

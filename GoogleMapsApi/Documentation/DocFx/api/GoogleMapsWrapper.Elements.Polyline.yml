### YamlMime:ManagedReference
items:
- uid: GoogleMapsWrapper.Elements.Polyline
  commentId: T:GoogleMapsWrapper.Elements.Polyline
  id: Polyline
  parent: GoogleMapsWrapper.Elements
  children:
  - GoogleMapsWrapper.Elements.Polyline.#ctor(System.Collections.Generic.IEnumerable{GoogleMapsWrapper.Types.GpsCoordinate})
  - GoogleMapsWrapper.Elements.Polyline.Coordinates
  - GoogleMapsWrapper.Elements.Polyline.Geodesic
  - GoogleMapsWrapper.Elements.Polyline.IsEmpty
  - GoogleMapsWrapper.Elements.Polyline.IsValid
  - GoogleMapsWrapper.Elements.Polyline.Label
  - GoogleMapsWrapper.Elements.Polyline.ToString
  - GoogleMapsWrapper.Elements.Polyline.Weight
  langs:
  - csharp
  - vb
  name: Polyline
  nameWithType: Polyline
  fullName: GoogleMapsWrapper.Elements.Polyline
  type: Class
  source:
    remote:
      path: GoogleMapsApi/Elements/Polyline.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: Polyline
    path: ../../Elements/Polyline.cs
    startLine: 16
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Elements
  syntax:
    content: 'public record Polyline : GoogleMapElement, IEquatable<GoogleMapElement>, IEquatable<Polyline>'
    content.vb: Public Class Polyline Inherits GoogleMapElement Implements IEquatable(Of GoogleMapElement), IEquatable(Of Polyline)
  inheritance:
  - System.Object
  - GoogleMapsWrapper.Elements.GoogleMapElement
  implements:
  - System.IEquatable{GoogleMapsWrapper.Elements.GoogleMapElement}
  - System.IEquatable{GoogleMapsWrapper.Elements.Polyline}
  inheritedMembers:
  - GoogleMapsWrapper.Elements.GoogleMapElement.Name
  - GoogleMapsWrapper.Elements.GoogleMapElement.Id
  - GoogleMapsWrapper.Elements.GoogleMapElement.AssociatedData
  - GoogleMapsWrapper.Elements.GoogleMapElement.Color
  - GoogleMapsWrapper.Elements.GoogleMapElement.SecondaryColor
  - GoogleMapsWrapper.Elements.GoogleMapElement.Visible
  - GoogleMapsWrapper.Elements.GoogleMapElement.Height
  - GoogleMapsWrapper.Elements.GoogleMapElement.Width
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: GoogleMapsWrapper.Elements.Polyline.Weight
  commentId: P:GoogleMapsWrapper.Elements.Polyline.Weight
  id: Weight
  parent: GoogleMapsWrapper.Elements.Polyline
  langs:
  - csharp
  - vb
  name: Weight
  nameWithType: Polyline.Weight
  fullName: GoogleMapsWrapper.Elements.Polyline.Weight
  type: Property
  source:
    remote:
      path: GoogleMapsApi/Elements/Polyline.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: Weight
    path: ../../Elements/Polyline.cs
    startLine: 19
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Elements
  summary: The weight of the line when rendered. In pixels.
  example: []
  syntax:
    content: public int Weight { get; init; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Weight As Integer
  overload: GoogleMapsWrapper.Elements.Polyline.Weight*
- uid: GoogleMapsWrapper.Elements.Polyline.Geodesic
  commentId: P:GoogleMapsWrapper.Elements.Polyline.Geodesic
  id: Geodesic
  parent: GoogleMapsWrapper.Elements.Polyline
  langs:
  - csharp
  - vb
  name: Geodesic
  nameWithType: Polyline.Geodesic
  fullName: GoogleMapsWrapper.Elements.Polyline.Geodesic
  type: Property
  source:
    remote:
      path: GoogleMapsApi/Elements/Polyline.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: Geodesic
    path: ../../Elements/Polyline.cs
    startLine: 22
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Elements
  summary: Allows the line to follow the earth's contour.
  example: []
  syntax:
    content: public bool Geodesic { get; init; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Geodesic As Boolean
  overload: GoogleMapsWrapper.Elements.Polyline.Geodesic*
- uid: GoogleMapsWrapper.Elements.Polyline.Label
  commentId: P:GoogleMapsWrapper.Elements.Polyline.Label
  id: Label
  parent: GoogleMapsWrapper.Elements.Polyline
  langs:
  - csharp
  - vb
  name: Label
  nameWithType: Polyline.Label
  fullName: GoogleMapsWrapper.Elements.Polyline.Label
  type: Property
  source:
    remote:
      path: GoogleMapsApi/Elements/Polyline.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: Label
    path: ../../Elements/Polyline.cs
    startLine: 25
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Elements
  summary: Label displayed with the marker.
  example: []
  syntax:
    content: public char? Label { get; init; }
    parameters: []
    return:
      type: System.Nullable{System.Char}
    content.vb: Public Property Label As Char?
  overload: GoogleMapsWrapper.Elements.Polyline.Label*
- uid: GoogleMapsWrapper.Elements.Polyline.Coordinates
  commentId: P:GoogleMapsWrapper.Elements.Polyline.Coordinates
  id: Coordinates
  parent: GoogleMapsWrapper.Elements.Polyline
  langs:
  - csharp
  - vb
  name: Coordinates
  nameWithType: Polyline.Coordinates
  fullName: GoogleMapsWrapper.Elements.Polyline.Coordinates
  type: Property
  source:
    remote:
      path: GoogleMapsApi/Elements/Polyline.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: Coordinates
    path: ../../Elements/Polyline.cs
    startLine: 30
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Elements
  summary: Gets the coordinates contained in the Polyline.
  example: []
  syntax:
    content: public IReadOnlyCollection<GpsCoordinate> Coordinates { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyCollection{GoogleMapsWrapper.Types.GpsCoordinate}
    content.vb: Public ReadOnly Property Coordinates As IReadOnlyCollection(Of GpsCoordinate)
  overload: GoogleMapsWrapper.Elements.Polyline.Coordinates*
- uid: GoogleMapsWrapper.Elements.Polyline.#ctor(System.Collections.Generic.IEnumerable{GoogleMapsWrapper.Types.GpsCoordinate})
  commentId: M:GoogleMapsWrapper.Elements.Polyline.#ctor(System.Collections.Generic.IEnumerable{GoogleMapsWrapper.Types.GpsCoordinate})
  id: '#ctor(System.Collections.Generic.IEnumerable{GoogleMapsWrapper.Types.GpsCoordinate})'
  parent: GoogleMapsWrapper.Elements.Polyline
  langs:
  - csharp
  - vb
  name: Polyline(IEnumerable<GpsCoordinate>)
  nameWithType: Polyline.Polyline(IEnumerable<GpsCoordinate>)
  fullName: GoogleMapsWrapper.Elements.Polyline.Polyline(System.Collections.Generic.IEnumerable<GoogleMapsWrapper.Types.GpsCoordinate>)
  type: Constructor
  source:
    remote:
      path: GoogleMapsApi/Elements/Polyline.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: .ctor
    path: ../../Elements/Polyline.cs
    startLine: 40
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Elements
  summary: Initializes a new Polyline from a set of coordinate objects.
  example: []
  syntax:
    content: public Polyline(IEnumerable<GpsCoordinate> Coordinates)
    parameters:
    - id: Coordinates
      type: System.Collections.Generic.IEnumerable{GoogleMapsWrapper.Types.GpsCoordinate}
    content.vb: Public Sub New(Coordinates As IEnumerable(Of GpsCoordinate))
  overload: GoogleMapsWrapper.Elements.Polyline.#ctor*
  nameWithType.vb: Polyline.New(IEnumerable(Of GpsCoordinate))
  fullName.vb: GoogleMapsWrapper.Elements.Polyline.New(System.Collections.Generic.IEnumerable(Of GoogleMapsWrapper.Types.GpsCoordinate))
  name.vb: New(IEnumerable(Of GpsCoordinate))
- uid: GoogleMapsWrapper.Elements.Polyline.IsEmpty
  commentId: M:GoogleMapsWrapper.Elements.Polyline.IsEmpty
  id: IsEmpty
  parent: GoogleMapsWrapper.Elements.Polyline
  langs:
  - csharp
  - vb
  name: IsEmpty()
  nameWithType: Polyline.IsEmpty()
  fullName: GoogleMapsWrapper.Elements.Polyline.IsEmpty()
  type: Method
  source:
    remote:
      path: GoogleMapsApi/Elements/Polyline.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: IsEmpty
    path: ../../Elements/Polyline.cs
    startLine: 51
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Elements
  summary: Returns true if the Polyline contains zero coordinates.
  example: []
  syntax:
    content: public bool IsEmpty()
    return:
      type: System.Boolean
    content.vb: Public Function IsEmpty() As Boolean
  overload: GoogleMapsWrapper.Elements.Polyline.IsEmpty*
- uid: GoogleMapsWrapper.Elements.Polyline.IsValid
  commentId: M:GoogleMapsWrapper.Elements.Polyline.IsValid
  id: IsValid
  parent: GoogleMapsWrapper.Elements.Polyline
  langs:
  - csharp
  - vb
  name: IsValid()
  nameWithType: Polyline.IsValid()
  fullName: GoogleMapsWrapper.Elements.Polyline.IsValid()
  type: Method
  source:
    remote:
      path: GoogleMapsApi/Elements/Polyline.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: IsValid
    path: ../../Elements/Polyline.cs
    startLine: 60
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Elements
  summary: Returns true if the Polyline contains more than 1 coordinate.
  example: []
  syntax:
    content: public bool IsValid()
    return:
      type: System.Boolean
    content.vb: Public Function IsValid() As Boolean
  overload: GoogleMapsWrapper.Elements.Polyline.IsValid*
- uid: GoogleMapsWrapper.Elements.Polyline.ToString
  commentId: M:GoogleMapsWrapper.Elements.Polyline.ToString
  id: ToString
  parent: GoogleMapsWrapper.Elements.Polyline
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Polyline.ToString()
  fullName: GoogleMapsWrapper.Elements.Polyline.ToString()
  type: Method
  source:
    remote:
      path: GoogleMapsApi/Elements/Polyline.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: ToString
    path: ../../Elements/Polyline.cs
    startLine: 69
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Elements
  summary: Returns a semicolon separated string of coordinates.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: GoogleMapsWrapper.Elements.GoogleMapElement.ToString
  overload: GoogleMapsWrapper.Elements.Polyline.ToString*
references:
- uid: GoogleMapsWrapper.Elements
  commentId: N:GoogleMapsWrapper.Elements
  href: GoogleMapsWrapper.html
  name: GoogleMapsWrapper.Elements
  nameWithType: GoogleMapsWrapper.Elements
  fullName: GoogleMapsWrapper.Elements
  spec.csharp:
  - uid: GoogleMapsWrapper
    name: GoogleMapsWrapper
    href: GoogleMapsWrapper.html
  - name: .
  - uid: GoogleMapsWrapper.Elements
    name: Elements
    href: GoogleMapsWrapper.Elements.html
  spec.vb:
  - uid: GoogleMapsWrapper
    name: GoogleMapsWrapper
    href: GoogleMapsWrapper.html
  - name: .
  - uid: GoogleMapsWrapper.Elements
    name: Elements
    href: GoogleMapsWrapper.Elements.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: GoogleMapsWrapper.Elements.GoogleMapElement
  commentId: T:GoogleMapsWrapper.Elements.GoogleMapElement
  parent: GoogleMapsWrapper.Elements
  href: GoogleMapsWrapper.Elements.GoogleMapElement.html
  name: GoogleMapElement
  nameWithType: GoogleMapElement
  fullName: GoogleMapsWrapper.Elements.GoogleMapElement
- uid: System.IEquatable{GoogleMapsWrapper.Elements.GoogleMapElement}
  commentId: T:System.IEquatable{GoogleMapsWrapper.Elements.GoogleMapElement}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<GoogleMapElement>
  nameWithType: IEquatable<GoogleMapElement>
  fullName: System.IEquatable<GoogleMapsWrapper.Elements.GoogleMapElement>
  nameWithType.vb: IEquatable(Of GoogleMapElement)
  fullName.vb: System.IEquatable(Of GoogleMapsWrapper.Elements.GoogleMapElement)
  name.vb: IEquatable(Of GoogleMapElement)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: GoogleMapsWrapper.Elements.GoogleMapElement
    name: GoogleMapElement
    href: GoogleMapsWrapper.Elements.GoogleMapElement.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: GoogleMapsWrapper.Elements.GoogleMapElement
    name: GoogleMapElement
    href: GoogleMapsWrapper.Elements.GoogleMapElement.html
  - name: )
- uid: System.IEquatable{GoogleMapsWrapper.Elements.Polyline}
  commentId: T:System.IEquatable{GoogleMapsWrapper.Elements.Polyline}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Polyline>
  nameWithType: IEquatable<Polyline>
  fullName: System.IEquatable<GoogleMapsWrapper.Elements.Polyline>
  nameWithType.vb: IEquatable(Of Polyline)
  fullName.vb: System.IEquatable(Of GoogleMapsWrapper.Elements.Polyline)
  name.vb: IEquatable(Of Polyline)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: GoogleMapsWrapper.Elements.Polyline
    name: Polyline
    href: GoogleMapsWrapper.Elements.Polyline.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: GoogleMapsWrapper.Elements.Polyline
    name: Polyline
    href: GoogleMapsWrapper.Elements.Polyline.html
  - name: )
- uid: GoogleMapsWrapper.Elements.GoogleMapElement.Name
  commentId: P:GoogleMapsWrapper.Elements.GoogleMapElement.Name
  parent: GoogleMapsWrapper.Elements.GoogleMapElement
  href: GoogleMapsWrapper.Elements.GoogleMapElement.html#GoogleMapsWrapper_Elements_GoogleMapElement_Name
  name: Name
  nameWithType: GoogleMapElement.Name
  fullName: GoogleMapsWrapper.Elements.GoogleMapElement.Name
- uid: GoogleMapsWrapper.Elements.GoogleMapElement.Id
  commentId: P:GoogleMapsWrapper.Elements.GoogleMapElement.Id
  parent: GoogleMapsWrapper.Elements.GoogleMapElement
  href: GoogleMapsWrapper.Elements.GoogleMapElement.html#GoogleMapsWrapper_Elements_GoogleMapElement_Id
  name: Id
  nameWithType: GoogleMapElement.Id
  fullName: GoogleMapsWrapper.Elements.GoogleMapElement.Id
- uid: GoogleMapsWrapper.Elements.GoogleMapElement.AssociatedData
  commentId: P:GoogleMapsWrapper.Elements.GoogleMapElement.AssociatedData
  parent: GoogleMapsWrapper.Elements.GoogleMapElement
  href: GoogleMapsWrapper.Elements.GoogleMapElement.html#GoogleMapsWrapper_Elements_GoogleMapElement_AssociatedData
  name: AssociatedData
  nameWithType: GoogleMapElement.AssociatedData
  fullName: GoogleMapsWrapper.Elements.GoogleMapElement.AssociatedData
- uid: GoogleMapsWrapper.Elements.GoogleMapElement.Color
  commentId: P:GoogleMapsWrapper.Elements.GoogleMapElement.Color
  parent: GoogleMapsWrapper.Elements.GoogleMapElement
  href: GoogleMapsWrapper.Elements.GoogleMapElement.html#GoogleMapsWrapper_Elements_GoogleMapElement_Color
  name: Color
  nameWithType: GoogleMapElement.Color
  fullName: GoogleMapsWrapper.Elements.GoogleMapElement.Color
- uid: GoogleMapsWrapper.Elements.GoogleMapElement.SecondaryColor
  commentId: P:GoogleMapsWrapper.Elements.GoogleMapElement.SecondaryColor
  parent: GoogleMapsWrapper.Elements.GoogleMapElement
  href: GoogleMapsWrapper.Elements.GoogleMapElement.html#GoogleMapsWrapper_Elements_GoogleMapElement_SecondaryColor
  name: SecondaryColor
  nameWithType: GoogleMapElement.SecondaryColor
  fullName: GoogleMapsWrapper.Elements.GoogleMapElement.SecondaryColor
- uid: GoogleMapsWrapper.Elements.GoogleMapElement.Visible
  commentId: P:GoogleMapsWrapper.Elements.GoogleMapElement.Visible
  parent: GoogleMapsWrapper.Elements.GoogleMapElement
  href: GoogleMapsWrapper.Elements.GoogleMapElement.html#GoogleMapsWrapper_Elements_GoogleMapElement_Visible
  name: Visible
  nameWithType: GoogleMapElement.Visible
  fullName: GoogleMapsWrapper.Elements.GoogleMapElement.Visible
- uid: GoogleMapsWrapper.Elements.GoogleMapElement.Height
  commentId: P:GoogleMapsWrapper.Elements.GoogleMapElement.Height
  parent: GoogleMapsWrapper.Elements.GoogleMapElement
  href: GoogleMapsWrapper.Elements.GoogleMapElement.html#GoogleMapsWrapper_Elements_GoogleMapElement_Height
  name: Height
  nameWithType: GoogleMapElement.Height
  fullName: GoogleMapsWrapper.Elements.GoogleMapElement.Height
- uid: GoogleMapsWrapper.Elements.GoogleMapElement.Width
  commentId: P:GoogleMapsWrapper.Elements.GoogleMapElement.Width
  parent: GoogleMapsWrapper.Elements.GoogleMapElement
  href: GoogleMapsWrapper.Elements.GoogleMapElement.html#GoogleMapsWrapper_Elements_GoogleMapElement_Width
  name: Width
  nameWithType: GoogleMapElement.Width
  fullName: GoogleMapsWrapper.Elements.GoogleMapElement.Width
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: GoogleMapsWrapper.Elements.Polyline.Weight*
  commentId: Overload:GoogleMapsWrapper.Elements.Polyline.Weight
  href: GoogleMapsWrapper.Elements.Polyline.html#GoogleMapsWrapper_Elements_Polyline_Weight
  name: Weight
  nameWithType: Polyline.Weight
  fullName: GoogleMapsWrapper.Elements.Polyline.Weight
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: GoogleMapsWrapper.Elements.Polyline.Geodesic*
  commentId: Overload:GoogleMapsWrapper.Elements.Polyline.Geodesic
  href: GoogleMapsWrapper.Elements.Polyline.html#GoogleMapsWrapper_Elements_Polyline_Geodesic
  name: Geodesic
  nameWithType: Polyline.Geodesic
  fullName: GoogleMapsWrapper.Elements.Polyline.Geodesic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: GoogleMapsWrapper.Elements.Polyline.Label*
  commentId: Overload:GoogleMapsWrapper.Elements.Polyline.Label
  href: GoogleMapsWrapper.Elements.Polyline.html#GoogleMapsWrapper_Elements_Polyline_Label
  name: Label
  nameWithType: Polyline.Label
  fullName: GoogleMapsWrapper.Elements.Polyline.Label
- uid: System.Nullable{System.Char}
  commentId: T:System.Nullable{System.Char}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char?
  nameWithType: char?
  fullName: char?
  nameWithType.vb: Char?
  fullName.vb: Char?
  name.vb: Char?
  spec.csharp:
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '?'
  spec.vb:
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: GoogleMapsWrapper.Elements.Polyline.Coordinates*
  commentId: Overload:GoogleMapsWrapper.Elements.Polyline.Coordinates
  href: GoogleMapsWrapper.Elements.Polyline.html#GoogleMapsWrapper_Elements_Polyline_Coordinates
  name: Coordinates
  nameWithType: Polyline.Coordinates
  fullName: GoogleMapsWrapper.Elements.Polyline.Coordinates
- uid: System.Collections.Generic.IReadOnlyCollection{GoogleMapsWrapper.Types.GpsCoordinate}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{GoogleMapsWrapper.Types.GpsCoordinate}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<GpsCoordinate>
  nameWithType: IReadOnlyCollection<GpsCoordinate>
  fullName: System.Collections.Generic.IReadOnlyCollection<GoogleMapsWrapper.Types.GpsCoordinate>
  nameWithType.vb: IReadOnlyCollection(Of GpsCoordinate)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of GoogleMapsWrapper.Types.GpsCoordinate)
  name.vb: IReadOnlyCollection(Of GpsCoordinate)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: GoogleMapsWrapper.Types.GpsCoordinate
    name: GpsCoordinate
    href: GoogleMapsWrapper.Types.GpsCoordinate.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: GoogleMapsWrapper.Types.GpsCoordinate
    name: GpsCoordinate
    href: GoogleMapsWrapper.Types.GpsCoordinate.html
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: GoogleMapsWrapper.Elements.Polyline.#ctor*
  commentId: Overload:GoogleMapsWrapper.Elements.Polyline.#ctor
  href: GoogleMapsWrapper.Elements.Polyline.html#GoogleMapsWrapper_Elements_Polyline__ctor_System_Collections_Generic_IEnumerable_GoogleMapsWrapper_Types_GpsCoordinate__
  name: Polyline
  nameWithType: Polyline.Polyline
  fullName: GoogleMapsWrapper.Elements.Polyline.Polyline
  nameWithType.vb: Polyline.New
  fullName.vb: GoogleMapsWrapper.Elements.Polyline.New
  name.vb: New
- uid: System.Collections.Generic.IEnumerable{GoogleMapsWrapper.Types.GpsCoordinate}
  commentId: T:System.Collections.Generic.IEnumerable{GoogleMapsWrapper.Types.GpsCoordinate}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<GpsCoordinate>
  nameWithType: IEnumerable<GpsCoordinate>
  fullName: System.Collections.Generic.IEnumerable<GoogleMapsWrapper.Types.GpsCoordinate>
  nameWithType.vb: IEnumerable(Of GpsCoordinate)
  fullName.vb: System.Collections.Generic.IEnumerable(Of GoogleMapsWrapper.Types.GpsCoordinate)
  name.vb: IEnumerable(Of GpsCoordinate)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: GoogleMapsWrapper.Types.GpsCoordinate
    name: GpsCoordinate
    href: GoogleMapsWrapper.Types.GpsCoordinate.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: GoogleMapsWrapper.Types.GpsCoordinate
    name: GpsCoordinate
    href: GoogleMapsWrapper.Types.GpsCoordinate.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: GoogleMapsWrapper.Elements.Polyline.IsEmpty*
  commentId: Overload:GoogleMapsWrapper.Elements.Polyline.IsEmpty
  href: GoogleMapsWrapper.Elements.Polyline.html#GoogleMapsWrapper_Elements_Polyline_IsEmpty
  name: IsEmpty
  nameWithType: Polyline.IsEmpty
  fullName: GoogleMapsWrapper.Elements.Polyline.IsEmpty
- uid: GoogleMapsWrapper.Elements.Polyline.IsValid*
  commentId: Overload:GoogleMapsWrapper.Elements.Polyline.IsValid
  href: GoogleMapsWrapper.Elements.Polyline.html#GoogleMapsWrapper_Elements_Polyline_IsValid
  name: IsValid
  nameWithType: Polyline.IsValid
  fullName: GoogleMapsWrapper.Elements.Polyline.IsValid
- uid: GoogleMapsWrapper.Elements.GoogleMapElement.ToString
  commentId: M:GoogleMapsWrapper.Elements.GoogleMapElement.ToString
  parent: GoogleMapsWrapper.Elements.GoogleMapElement
  href: GoogleMapsWrapper.Elements.GoogleMapElement.html#GoogleMapsWrapper_Elements_GoogleMapElement_ToString
  name: ToString()
  nameWithType: GoogleMapElement.ToString()
  fullName: GoogleMapsWrapper.Elements.GoogleMapElement.ToString()
  spec.csharp:
  - uid: GoogleMapsWrapper.Elements.GoogleMapElement.ToString
    name: ToString
    href: GoogleMapsWrapper.Elements.GoogleMapElement.html#GoogleMapsWrapper_Elements_GoogleMapElement_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: GoogleMapsWrapper.Elements.GoogleMapElement.ToString
    name: ToString
    href: GoogleMapsWrapper.Elements.GoogleMapElement.html#GoogleMapsWrapper_Elements_GoogleMapElement_ToString
  - name: (
  - name: )
- uid: GoogleMapsWrapper.Elements.Polyline.ToString*
  commentId: Overload:GoogleMapsWrapper.Elements.Polyline.ToString
  href: GoogleMapsWrapper.Elements.Polyline.html#GoogleMapsWrapper_Elements_Polyline_ToString
  name: ToString
  nameWithType: Polyline.ToString
  fullName: GoogleMapsWrapper.Elements.Polyline.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String

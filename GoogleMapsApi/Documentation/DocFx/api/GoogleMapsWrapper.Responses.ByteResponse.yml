### YamlMime:ManagedReference
items:
- uid: GoogleMapsWrapper.Responses.ByteResponse
  commentId: T:GoogleMapsWrapper.Responses.ByteResponse
  id: ByteResponse
  parent: GoogleMapsWrapper.Responses
  children:
  - GoogleMapsWrapper.Responses.ByteResponse.#ctor(GoogleMapsWrapper.Requests.IRequest,System.Byte[],System.Net.Http.HttpResponseMessage)
  - GoogleMapsWrapper.Responses.ByteResponse.Content
  - GoogleMapsWrapper.Responses.ByteResponse.Parse``1(GoogleMapsWrapper.Parsers.IParser{``0,System.Byte[]})
  - GoogleMapsWrapper.Responses.ByteResponse.ResponseMessage
  - GoogleMapsWrapper.Responses.ByteResponse.SentRequest
  - GoogleMapsWrapper.Responses.ByteResponse.content
  langs:
  - csharp
  - vb
  name: ByteResponse
  nameWithType: ByteResponse
  fullName: GoogleMapsWrapper.Responses.ByteResponse
  type: Class
  source:
    remote:
      path: GoogleMapsApi/Responses/ByteResponse.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: ByteResponse
    path: ../../Responses/ByteResponse.cs
    startLine: 10
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Responses
  syntax:
    content: 'public class ByteResponse : IResponse<byte[]>'
    content.vb: Public Class ByteResponse Implements IResponse(Of Byte())
  inheritance:
  - System.Object
  implements:
  - GoogleMapsWrapper.Responses.IResponse{System.Byte[]}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: GoogleMapsWrapper.Responses.ByteResponse.SentRequest
  commentId: P:GoogleMapsWrapper.Responses.ByteResponse.SentRequest
  id: SentRequest
  parent: GoogleMapsWrapper.Responses.ByteResponse
  langs:
  - csharp
  - vb
  name: SentRequest
  nameWithType: ByteResponse.SentRequest
  fullName: GoogleMapsWrapper.Responses.ByteResponse.SentRequest
  type: Property
  source:
    remote:
      path: GoogleMapsApi/Responses/ByteResponse.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: SentRequest
    path: ../../Responses/ByteResponse.cs
    startLine: 13
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Responses
  example: []
  syntax:
    content: public IRequest SentRequest { get; }
    parameters: []
    return:
      type: GoogleMapsWrapper.Requests.IRequest
    content.vb: Public ReadOnly Property SentRequest As IRequest
  overload: GoogleMapsWrapper.Responses.ByteResponse.SentRequest*
  implements:
  - GoogleMapsWrapper.Responses.IResponse{System.Byte[]}.SentRequest
- uid: GoogleMapsWrapper.Responses.ByteResponse.ResponseMessage
  commentId: P:GoogleMapsWrapper.Responses.ByteResponse.ResponseMessage
  id: ResponseMessage
  parent: GoogleMapsWrapper.Responses.ByteResponse
  langs:
  - csharp
  - vb
  name: ResponseMessage
  nameWithType: ByteResponse.ResponseMessage
  fullName: GoogleMapsWrapper.Responses.ByteResponse.ResponseMessage
  type: Property
  source:
    remote:
      path: GoogleMapsApi/Responses/ByteResponse.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: ResponseMessage
    path: ../../Responses/ByteResponse.cs
    startLine: 16
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Responses
  example: []
  syntax:
    content: public HttpResponseMessage ResponseMessage { get; }
    parameters: []
    return:
      type: System.Net.Http.HttpResponseMessage
    content.vb: Public ReadOnly Property ResponseMessage As HttpResponseMessage
  overload: GoogleMapsWrapper.Responses.ByteResponse.ResponseMessage*
  implements:
  - GoogleMapsWrapper.Responses.IResponse{System.Byte[]}.ResponseMessage
- uid: GoogleMapsWrapper.Responses.ByteResponse.content
  commentId: F:GoogleMapsWrapper.Responses.ByteResponse.content
  id: content
  parent: GoogleMapsWrapper.Responses.ByteResponse
  langs:
  - csharp
  - vb
  name: content
  nameWithType: ByteResponse.content
  fullName: GoogleMapsWrapper.Responses.ByteResponse.content
  type: Field
  source:
    remote:
      path: GoogleMapsApi/Responses/ByteResponse.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: content
    path: ../../Responses/ByteResponse.cs
    startLine: 18
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Responses
  syntax:
    content: public byte[]? content
    return:
      type: System.Byte[]
    content.vb: Public content As Byte()
- uid: GoogleMapsWrapper.Responses.ByteResponse.Content
  commentId: P:GoogleMapsWrapper.Responses.ByteResponse.Content
  id: Content
  parent: GoogleMapsWrapper.Responses.ByteResponse
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: ByteResponse.Content
  fullName: GoogleMapsWrapper.Responses.ByteResponse.Content
  type: Property
  source:
    remote:
      path: GoogleMapsApi/Responses/ByteResponse.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: Content
    path: ../../Responses/ByteResponse.cs
    startLine: 19
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Responses
  example: []
  syntax:
    content: public byte[]? Content { get; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public ReadOnly Property Content As Byte()
  overload: GoogleMapsWrapper.Responses.ByteResponse.Content*
  implements:
  - GoogleMapsWrapper.Responses.IResponse{System.Byte[]}.Content
- uid: GoogleMapsWrapper.Responses.ByteResponse.#ctor(GoogleMapsWrapper.Requests.IRequest,System.Byte[],System.Net.Http.HttpResponseMessage)
  commentId: M:GoogleMapsWrapper.Responses.ByteResponse.#ctor(GoogleMapsWrapper.Requests.IRequest,System.Byte[],System.Net.Http.HttpResponseMessage)
  id: '#ctor(GoogleMapsWrapper.Requests.IRequest,System.Byte[],System.Net.Http.HttpResponseMessage)'
  parent: GoogleMapsWrapper.Responses.ByteResponse
  langs:
  - csharp
  - vb
  name: ByteResponse(IRequest, byte[], HttpResponseMessage)
  nameWithType: ByteResponse.ByteResponse(IRequest, byte[], HttpResponseMessage)
  fullName: GoogleMapsWrapper.Responses.ByteResponse.ByteResponse(GoogleMapsWrapper.Requests.IRequest, byte[], System.Net.Http.HttpResponseMessage)
  type: Constructor
  source:
    remote:
      path: GoogleMapsApi/Responses/ByteResponse.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: .ctor
    path: ../../Responses/ByteResponse.cs
    startLine: 20
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Responses
  syntax:
    content: public ByteResponse(IRequest SentRequest, byte[] Content, HttpResponseMessage ResponseMessage)
    parameters:
    - id: SentRequest
      type: GoogleMapsWrapper.Requests.IRequest
    - id: Content
      type: System.Byte[]
    - id: ResponseMessage
      type: System.Net.Http.HttpResponseMessage
    content.vb: Public Sub New(SentRequest As IRequest, Content As Byte(), ResponseMessage As HttpResponseMessage)
  overload: GoogleMapsWrapper.Responses.ByteResponse.#ctor*
  nameWithType.vb: ByteResponse.New(IRequest, Byte(), HttpResponseMessage)
  fullName.vb: GoogleMapsWrapper.Responses.ByteResponse.New(GoogleMapsWrapper.Requests.IRequest, Byte(), System.Net.Http.HttpResponseMessage)
  name.vb: New(IRequest, Byte(), HttpResponseMessage)
- uid: GoogleMapsWrapper.Responses.ByteResponse.Parse``1(GoogleMapsWrapper.Parsers.IParser{``0,System.Byte[]})
  commentId: M:GoogleMapsWrapper.Responses.ByteResponse.Parse``1(GoogleMapsWrapper.Parsers.IParser{``0,System.Byte[]})
  id: Parse``1(GoogleMapsWrapper.Parsers.IParser{``0,System.Byte[]})
  parent: GoogleMapsWrapper.Responses.ByteResponse
  langs:
  - csharp
  - vb
  name: Parse<T>(IParser<T, byte[]>)
  nameWithType: ByteResponse.Parse<T>(IParser<T, byte[]>)
  fullName: GoogleMapsWrapper.Responses.ByteResponse.Parse<T>(GoogleMapsWrapper.Parsers.IParser<T, byte[]>)
  type: Method
  source:
    remote:
      path: GoogleMapsApi/Responses/ByteResponse.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: Parse
    path: ../../Responses/ByteResponse.cs
    startLine: 26
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Responses
  example: []
  syntax:
    content: public T Parse<T>(IParser<T, byte[]> parser)
    parameters:
    - id: parser
      type: GoogleMapsWrapper.Parsers.IParser{{T},System.Byte[]}
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function Parse(Of T)(parser As IParser(Of T, Byte())) As T
  overload: GoogleMapsWrapper.Responses.ByteResponse.Parse*
  implements:
  - GoogleMapsWrapper.Responses.IResponse{System.Byte[]}.Parse``1(GoogleMapsWrapper.Parsers.IParser{{T},System.Byte[]})
  nameWithType.vb: ByteResponse.Parse(Of T)(IParser(Of T, Byte()))
  fullName.vb: GoogleMapsWrapper.Responses.ByteResponse.Parse(Of T)(GoogleMapsWrapper.Parsers.IParser(Of T, Byte()))
  name.vb: Parse(Of T)(IParser(Of T, Byte()))
references:
- uid: GoogleMapsWrapper.Responses
  commentId: N:GoogleMapsWrapper.Responses
  href: GoogleMapsWrapper.html
  name: GoogleMapsWrapper.Responses
  nameWithType: GoogleMapsWrapper.Responses
  fullName: GoogleMapsWrapper.Responses
  spec.csharp:
  - uid: GoogleMapsWrapper
    name: GoogleMapsWrapper
    href: GoogleMapsWrapper.html
  - name: .
  - uid: GoogleMapsWrapper.Responses
    name: Responses
    href: GoogleMapsWrapper.Responses.html
  spec.vb:
  - uid: GoogleMapsWrapper
    name: GoogleMapsWrapper
    href: GoogleMapsWrapper.html
  - name: .
  - uid: GoogleMapsWrapper.Responses
    name: Responses
    href: GoogleMapsWrapper.Responses.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: GoogleMapsWrapper.Responses.IResponse{System.Byte[]}
  commentId: T:GoogleMapsWrapper.Responses.IResponse{System.Byte[]}
  parent: GoogleMapsWrapper.Responses
  definition: GoogleMapsWrapper.Responses.IResponse`1
  href: GoogleMapsWrapper.Responses.IResponse-1.html
  name: IResponse<byte[]>
  nameWithType: IResponse<byte[]>
  fullName: GoogleMapsWrapper.Responses.IResponse<byte[]>
  nameWithType.vb: IResponse(Of Byte())
  fullName.vb: GoogleMapsWrapper.Responses.IResponse(Of Byte())
  name.vb: IResponse(Of Byte())
  spec.csharp:
  - uid: GoogleMapsWrapper.Responses.IResponse`1
    name: IResponse
    href: GoogleMapsWrapper.Responses.IResponse-1.html
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: GoogleMapsWrapper.Responses.IResponse`1
    name: IResponse
    href: GoogleMapsWrapper.Responses.IResponse-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: GoogleMapsWrapper.Responses.IResponse`1
  commentId: T:GoogleMapsWrapper.Responses.IResponse`1
  href: GoogleMapsWrapper.Responses.IResponse-1.html
  name: IResponse<TResponse>
  nameWithType: IResponse<TResponse>
  fullName: GoogleMapsWrapper.Responses.IResponse<TResponse>
  nameWithType.vb: IResponse(Of TResponse)
  fullName.vb: GoogleMapsWrapper.Responses.IResponse(Of TResponse)
  name.vb: IResponse(Of TResponse)
  spec.csharp:
  - uid: GoogleMapsWrapper.Responses.IResponse`1
    name: IResponse
    href: GoogleMapsWrapper.Responses.IResponse-1.html
  - name: <
  - name: TResponse
  - name: '>'
  spec.vb:
  - uid: GoogleMapsWrapper.Responses.IResponse`1
    name: IResponse
    href: GoogleMapsWrapper.Responses.IResponse-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TResponse
  - name: )
- uid: GoogleMapsWrapper.Responses.ByteResponse.SentRequest*
  commentId: Overload:GoogleMapsWrapper.Responses.ByteResponse.SentRequest
  href: GoogleMapsWrapper.Responses.ByteResponse.html#GoogleMapsWrapper_Responses_ByteResponse_SentRequest
  name: SentRequest
  nameWithType: ByteResponse.SentRequest
  fullName: GoogleMapsWrapper.Responses.ByteResponse.SentRequest
- uid: GoogleMapsWrapper.Responses.IResponse{System.Byte[]}.SentRequest
  commentId: P:GoogleMapsWrapper.Responses.IResponse{System.Byte[]}.SentRequest
  parent: GoogleMapsWrapper.Responses.IResponse{System.Byte[]}
  definition: GoogleMapsWrapper.Responses.IResponse`1.SentRequest
  href: GoogleMapsWrapper.Responses.IResponse-1.html#GoogleMapsWrapper_Responses_IResponse_1_SentRequest
  name: SentRequest
  nameWithType: IResponse<byte[]>.SentRequest
  fullName: GoogleMapsWrapper.Responses.IResponse<byte[]>.SentRequest
  nameWithType.vb: IResponse(Of Byte()).SentRequest
  fullName.vb: GoogleMapsWrapper.Responses.IResponse(Of Byte()).SentRequest
- uid: GoogleMapsWrapper.Requests.IRequest
  commentId: T:GoogleMapsWrapper.Requests.IRequest
  parent: GoogleMapsWrapper.Requests
  href: GoogleMapsWrapper.Requests.IRequest.html
  name: IRequest
  nameWithType: IRequest
  fullName: GoogleMapsWrapper.Requests.IRequest
- uid: GoogleMapsWrapper.Responses.IResponse`1.SentRequest
  commentId: P:GoogleMapsWrapper.Responses.IResponse`1.SentRequest
  href: GoogleMapsWrapper.Responses.IResponse-1.html#GoogleMapsWrapper_Responses_IResponse_1_SentRequest
  name: SentRequest
  nameWithType: IResponse<TResponse>.SentRequest
  fullName: GoogleMapsWrapper.Responses.IResponse<TResponse>.SentRequest
  nameWithType.vb: IResponse(Of TResponse).SentRequest
  fullName.vb: GoogleMapsWrapper.Responses.IResponse(Of TResponse).SentRequest
- uid: GoogleMapsWrapper.Requests
  commentId: N:GoogleMapsWrapper.Requests
  href: GoogleMapsWrapper.html
  name: GoogleMapsWrapper.Requests
  nameWithType: GoogleMapsWrapper.Requests
  fullName: GoogleMapsWrapper.Requests
  spec.csharp:
  - uid: GoogleMapsWrapper
    name: GoogleMapsWrapper
    href: GoogleMapsWrapper.html
  - name: .
  - uid: GoogleMapsWrapper.Requests
    name: Requests
    href: GoogleMapsWrapper.Requests.html
  spec.vb:
  - uid: GoogleMapsWrapper
    name: GoogleMapsWrapper
    href: GoogleMapsWrapper.html
  - name: .
  - uid: GoogleMapsWrapper.Requests
    name: Requests
    href: GoogleMapsWrapper.Requests.html
- uid: GoogleMapsWrapper.Responses.ByteResponse.ResponseMessage*
  commentId: Overload:GoogleMapsWrapper.Responses.ByteResponse.ResponseMessage
  href: GoogleMapsWrapper.Responses.ByteResponse.html#GoogleMapsWrapper_Responses_ByteResponse_ResponseMessage
  name: ResponseMessage
  nameWithType: ByteResponse.ResponseMessage
  fullName: GoogleMapsWrapper.Responses.ByteResponse.ResponseMessage
- uid: GoogleMapsWrapper.Responses.IResponse{System.Byte[]}.ResponseMessage
  commentId: P:GoogleMapsWrapper.Responses.IResponse{System.Byte[]}.ResponseMessage
  parent: GoogleMapsWrapper.Responses.IResponse{System.Byte[]}
  definition: GoogleMapsWrapper.Responses.IResponse`1.ResponseMessage
  href: GoogleMapsWrapper.Responses.IResponse-1.html#GoogleMapsWrapper_Responses_IResponse_1_ResponseMessage
  name: ResponseMessage
  nameWithType: IResponse<byte[]>.ResponseMessage
  fullName: GoogleMapsWrapper.Responses.IResponse<byte[]>.ResponseMessage
  nameWithType.vb: IResponse(Of Byte()).ResponseMessage
  fullName.vb: GoogleMapsWrapper.Responses.IResponse(Of Byte()).ResponseMessage
- uid: System.Net.Http.HttpResponseMessage
  commentId: T:System.Net.Http.HttpResponseMessage
  parent: System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.http.httpresponsemessage
  name: HttpResponseMessage
  nameWithType: HttpResponseMessage
  fullName: System.Net.Http.HttpResponseMessage
- uid: GoogleMapsWrapper.Responses.IResponse`1.ResponseMessage
  commentId: P:GoogleMapsWrapper.Responses.IResponse`1.ResponseMessage
  href: GoogleMapsWrapper.Responses.IResponse-1.html#GoogleMapsWrapper_Responses_IResponse_1_ResponseMessage
  name: ResponseMessage
  nameWithType: IResponse<TResponse>.ResponseMessage
  fullName: GoogleMapsWrapper.Responses.IResponse<TResponse>.ResponseMessage
  nameWithType.vb: IResponse(Of TResponse).ResponseMessage
  fullName.vb: GoogleMapsWrapper.Responses.IResponse(Of TResponse).ResponseMessage
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  - name: .
  - uid: System.Net.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  - name: .
  - uid: System.Net.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: GoogleMapsWrapper.Responses.ByteResponse.Content*
  commentId: Overload:GoogleMapsWrapper.Responses.ByteResponse.Content
  href: GoogleMapsWrapper.Responses.ByteResponse.html#GoogleMapsWrapper_Responses_ByteResponse_Content
  name: Content
  nameWithType: ByteResponse.Content
  fullName: GoogleMapsWrapper.Responses.ByteResponse.Content
- uid: GoogleMapsWrapper.Responses.IResponse{System.Byte[]}.Content
  commentId: P:GoogleMapsWrapper.Responses.IResponse{System.Byte[]}.Content
  parent: GoogleMapsWrapper.Responses.IResponse{System.Byte[]}
  definition: GoogleMapsWrapper.Responses.IResponse`1.Content
  href: GoogleMapsWrapper.Responses.IResponse-1.html#GoogleMapsWrapper_Responses_IResponse_1_Content
  name: Content
  nameWithType: IResponse<byte[]>.Content
  fullName: GoogleMapsWrapper.Responses.IResponse<byte[]>.Content
  nameWithType.vb: IResponse(Of Byte()).Content
  fullName.vb: GoogleMapsWrapper.Responses.IResponse(Of Byte()).Content
- uid: GoogleMapsWrapper.Responses.IResponse`1.Content
  commentId: P:GoogleMapsWrapper.Responses.IResponse`1.Content
  href: GoogleMapsWrapper.Responses.IResponse-1.html#GoogleMapsWrapper_Responses_IResponse_1_Content
  name: Content
  nameWithType: IResponse<TResponse>.Content
  fullName: GoogleMapsWrapper.Responses.IResponse<TResponse>.Content
  nameWithType.vb: IResponse(Of TResponse).Content
  fullName.vb: GoogleMapsWrapper.Responses.IResponse(Of TResponse).Content
- uid: GoogleMapsWrapper.Responses.ByteResponse.#ctor*
  commentId: Overload:GoogleMapsWrapper.Responses.ByteResponse.#ctor
  href: GoogleMapsWrapper.Responses.ByteResponse.html#GoogleMapsWrapper_Responses_ByteResponse__ctor_GoogleMapsWrapper_Requests_IRequest_System_Byte___System_Net_Http_HttpResponseMessage_
  name: ByteResponse
  nameWithType: ByteResponse.ByteResponse
  fullName: GoogleMapsWrapper.Responses.ByteResponse.ByteResponse
  nameWithType.vb: ByteResponse.New
  fullName.vb: GoogleMapsWrapper.Responses.ByteResponse.New
  name.vb: New
- uid: GoogleMapsWrapper.Responses.ByteResponse.Parse*
  commentId: Overload:GoogleMapsWrapper.Responses.ByteResponse.Parse
  href: GoogleMapsWrapper.Responses.ByteResponse.html#GoogleMapsWrapper_Responses_ByteResponse_Parse__1_GoogleMapsWrapper_Parsers_IParser___0_System_Byte____
  name: Parse
  nameWithType: ByteResponse.Parse
  fullName: GoogleMapsWrapper.Responses.ByteResponse.Parse
- uid: GoogleMapsWrapper.Responses.IResponse{System.Byte[]}.Parse``1(GoogleMapsWrapper.Parsers.IParser{{T},System.Byte[]})
  commentId: M:GoogleMapsWrapper.Responses.IResponse{System.Byte[]}.Parse``1(GoogleMapsWrapper.Parsers.IParser{``0,System.Byte[]})
  parent: GoogleMapsWrapper.Responses.IResponse{System.Byte[]}
  definition: GoogleMapsWrapper.Responses.IResponse`1.Parse``1(GoogleMapsWrapper.Parsers.IParser{``0,`0})
  href: GoogleMapsWrapper.Responses.IResponse-1.html#GoogleMapsWrapper_Responses_IResponse_1_Parse__1_GoogleMapsWrapper_Parsers_IParser___0__0__
  name: Parse<T>(IParser<T, byte[]>)
  nameWithType: IResponse<byte[]>.Parse<T>(IParser<T, byte[]>)
  fullName: GoogleMapsWrapper.Responses.IResponse<byte[]>.Parse<T>(GoogleMapsWrapper.Parsers.IParser<T, byte[]>)
  nameWithType.vb: IResponse(Of Byte()).Parse(Of T)(IParser(Of T, Byte()))
  fullName.vb: GoogleMapsWrapper.Responses.IResponse(Of Byte()).Parse(Of T)(GoogleMapsWrapper.Parsers.IParser(Of T, Byte()))
  name.vb: Parse(Of T)(IParser(Of T, Byte()))
  spec.csharp:
  - uid: GoogleMapsWrapper.Responses.IResponse{System.Byte[]}.Parse``1(GoogleMapsWrapper.Parsers.IParser{``0,System.Byte[]})
    name: Parse
    href: GoogleMapsWrapper.Responses.IResponse-1.html#GoogleMapsWrapper_Responses_IResponse_1_Parse__1_GoogleMapsWrapper_Parsers_IParser___0__0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: GoogleMapsWrapper.Parsers.IParser`2
    name: IParser
    href: GoogleMapsWrapper.Parsers.IParser-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: '>'
  - name: )
  spec.vb:
  - uid: GoogleMapsWrapper.Responses.IResponse{System.Byte[]}.Parse``1(GoogleMapsWrapper.Parsers.IParser{``0,System.Byte[]})
    name: Parse
    href: GoogleMapsWrapper.Responses.IResponse-1.html#GoogleMapsWrapper_Responses_IResponse_1_Parse__1_GoogleMapsWrapper_Parsers_IParser___0__0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: GoogleMapsWrapper.Parsers.IParser`2
    name: IParser
    href: GoogleMapsWrapper.Parsers.IParser-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: )
  - name: )
- uid: GoogleMapsWrapper.Parsers.IParser{{T},System.Byte[]}
  commentId: T:GoogleMapsWrapper.Parsers.IParser{``0,System.Byte[]}
  parent: GoogleMapsWrapper.Parsers
  definition: GoogleMapsWrapper.Parsers.IParser`2
  href: GoogleMapsWrapper.Parsers.IParser-2.html
  name: IParser<T, byte[]>
  nameWithType: IParser<T, byte[]>
  fullName: GoogleMapsWrapper.Parsers.IParser<T, byte[]>
  nameWithType.vb: IParser(Of T, Byte())
  fullName.vb: GoogleMapsWrapper.Parsers.IParser(Of T, Byte())
  name.vb: IParser(Of T, Byte())
  spec.csharp:
  - uid: GoogleMapsWrapper.Parsers.IParser`2
    name: IParser
    href: GoogleMapsWrapper.Parsers.IParser-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: GoogleMapsWrapper.Parsers.IParser`2
    name: IParser
    href: GoogleMapsWrapper.Parsers.IParser-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: GoogleMapsWrapper.Responses.IResponse`1.Parse``1(GoogleMapsWrapper.Parsers.IParser{``0,`0})
  commentId: M:GoogleMapsWrapper.Responses.IResponse`1.Parse``1(GoogleMapsWrapper.Parsers.IParser{``0,`0})
  href: GoogleMapsWrapper.Responses.IResponse-1.html#GoogleMapsWrapper_Responses_IResponse_1_Parse__1_GoogleMapsWrapper_Parsers_IParser___0__0__
  name: Parse<T>(IParser<T, TResponse>)
  nameWithType: IResponse<TResponse>.Parse<T>(IParser<T, TResponse>)
  fullName: GoogleMapsWrapper.Responses.IResponse<TResponse>.Parse<T>(GoogleMapsWrapper.Parsers.IParser<T, TResponse>)
  nameWithType.vb: IResponse(Of TResponse).Parse(Of T)(IParser(Of T, TResponse))
  fullName.vb: GoogleMapsWrapper.Responses.IResponse(Of TResponse).Parse(Of T)(GoogleMapsWrapper.Parsers.IParser(Of T, TResponse))
  name.vb: Parse(Of T)(IParser(Of T, TResponse))
  spec.csharp:
  - uid: GoogleMapsWrapper.Responses.IResponse`1.Parse``1(GoogleMapsWrapper.Parsers.IParser{``0,`0})
    name: Parse
    href: GoogleMapsWrapper.Responses.IResponse-1.html#GoogleMapsWrapper_Responses_IResponse_1_Parse__1_GoogleMapsWrapper_Parsers_IParser___0__0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: GoogleMapsWrapper.Parsers.IParser`2
    name: IParser
    href: GoogleMapsWrapper.Parsers.IParser-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResponse
  - name: '>'
  - name: )
  spec.vb:
  - uid: GoogleMapsWrapper.Responses.IResponse`1.Parse``1(GoogleMapsWrapper.Parsers.IParser{``0,`0})
    name: Parse
    href: GoogleMapsWrapper.Responses.IResponse-1.html#GoogleMapsWrapper_Responses_IResponse_1_Parse__1_GoogleMapsWrapper_Parsers_IParser___0__0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: GoogleMapsWrapper.Parsers.IParser`2
    name: IParser
    href: GoogleMapsWrapper.Parsers.IParser-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResponse
  - name: )
  - name: )
- uid: GoogleMapsWrapper.Parsers.IParser`2
  commentId: T:GoogleMapsWrapper.Parsers.IParser`2
  href: GoogleMapsWrapper.Parsers.IParser-2.html
  name: IParser<TOutput, TInput>
  nameWithType: IParser<TOutput, TInput>
  fullName: GoogleMapsWrapper.Parsers.IParser<TOutput, TInput>
  nameWithType.vb: IParser(Of TOutput, TInput)
  fullName.vb: GoogleMapsWrapper.Parsers.IParser(Of TOutput, TInput)
  name.vb: IParser(Of TOutput, TInput)
  spec.csharp:
  - uid: GoogleMapsWrapper.Parsers.IParser`2
    name: IParser
    href: GoogleMapsWrapper.Parsers.IParser-2.html
  - name: <
  - name: TOutput
  - name: ','
  - name: " "
  - name: TInput
  - name: '>'
  spec.vb:
  - uid: GoogleMapsWrapper.Parsers.IParser`2
    name: IParser
    href: GoogleMapsWrapper.Parsers.IParser-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TOutput
  - name: ','
  - name: " "
  - name: TInput
  - name: )
- uid: GoogleMapsWrapper.Parsers
  commentId: N:GoogleMapsWrapper.Parsers
  href: GoogleMapsWrapper.html
  name: GoogleMapsWrapper.Parsers
  nameWithType: GoogleMapsWrapper.Parsers
  fullName: GoogleMapsWrapper.Parsers
  spec.csharp:
  - uid: GoogleMapsWrapper
    name: GoogleMapsWrapper
    href: GoogleMapsWrapper.html
  - name: .
  - uid: GoogleMapsWrapper.Parsers
    name: Parsers
    href: GoogleMapsWrapper.Parsers.html
  spec.vb:
  - uid: GoogleMapsWrapper
    name: GoogleMapsWrapper
    href: GoogleMapsWrapper.html
  - name: .
  - uid: GoogleMapsWrapper.Parsers
    name: Parsers
    href: GoogleMapsWrapper.Parsers.html
- uid: T
  name: T
  nameWithType: T
  fullName: T

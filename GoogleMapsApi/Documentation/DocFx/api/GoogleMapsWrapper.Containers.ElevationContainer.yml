### YamlMime:ManagedReference
items:
- uid: GoogleMapsWrapper.Containers.ElevationContainer
  commentId: T:GoogleMapsWrapper.Containers.ElevationContainer
  id: ElevationContainer
  parent: GoogleMapsWrapper.Containers
  children:
  - GoogleMapsWrapper.Containers.ElevationContainer.#ctor(System.Double,System.Double,System.Double,System.Nullable{GoogleMapsWrapper.Types.GpsCoordinate},System.Object)
  - GoogleMapsWrapper.Containers.ElevationContainer.AssociatedData
  - GoogleMapsWrapper.Containers.ElevationContainer.Coordinates
  - GoogleMapsWrapper.Containers.ElevationContainer.ElevationFeet
  - GoogleMapsWrapper.Containers.ElevationContainer.ElevationMeters
  - GoogleMapsWrapper.Containers.ElevationContainer.Resolution
  langs:
  - csharp
  - vb
  name: ElevationContainer
  nameWithType: ElevationContainer
  fullName: GoogleMapsWrapper.Containers.ElevationContainer
  type: Class
  source:
    remote:
      path: GoogleMapsApi/Containers/ElevationContainer.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: ElevationContainer
    path: ../../Containers/ElevationContainer.cs
    startLine: 22
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Containers
  summary: A object to hold parsed JSON data from Elevation API responses.
  example: []
  syntax:
    content: 'public record ElevationContainer : IContainer, IEquatable<ElevationContainer>'
    content.vb: Public Class ElevationContainer Implements IContainer, IEquatable(Of ElevationContainer)
  inheritance:
  - System.Object
  implements:
  - GoogleMapsWrapper.Containers.IContainer
  - System.IEquatable{GoogleMapsWrapper.Containers.ElevationContainer}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: GoogleMapsWrapper.Containers.ElevationContainer.#ctor(System.Double,System.Double,System.Double,System.Nullable{GoogleMapsWrapper.Types.GpsCoordinate},System.Object)
  commentId: M:GoogleMapsWrapper.Containers.ElevationContainer.#ctor(System.Double,System.Double,System.Double,System.Nullable{GoogleMapsWrapper.Types.GpsCoordinate},System.Object)
  id: '#ctor(System.Double,System.Double,System.Double,System.Nullable{GoogleMapsWrapper.Types.GpsCoordinate},System.Object)'
  parent: GoogleMapsWrapper.Containers.ElevationContainer
  langs:
  - csharp
  - vb
  name: ElevationContainer(double, double, double, GpsCoordinate?, object?)
  nameWithType: ElevationContainer.ElevationContainer(double, double, double, GpsCoordinate?, object?)
  fullName: GoogleMapsWrapper.Containers.ElevationContainer.ElevationContainer(double, double, double, GoogleMapsWrapper.Types.GpsCoordinate?, object?)
  type: Constructor
  source:
    remote:
      path: GoogleMapsApi/Containers/ElevationContainer.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: .ctor
    path: ../../Containers/ElevationContainer.cs
    startLine: 22
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Containers
  summary: A object to hold parsed JSON data from Elevation API responses.
  example: []
  syntax:
    content: public ElevationContainer(double ElevationMeters, double Resolution, double ElevationFeet, GpsCoordinate? Coordinates, object? AssociatedData)
    parameters:
    - id: ElevationMeters
      type: System.Double
      description: The elevation in meters.
      attributes:
      - type: Newtonsoft.Json.JsonPropertyAttribute
        ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: elevation
    - id: Resolution
      type: System.Double
      description: >-
        Indicates the maximum distance between data points 
                from which the elevation was interpolated, in meters. 
                This property is acquired from the JSON response's 'administrative_area_level_1' property.
      attributes:
      - type: Newtonsoft.Json.JsonPropertyAttribute
        ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: resolution
    - id: ElevationFeet
      type: System.Double
      description: The elevation in feet. This property is mathematically converted and not instrinsic to the API.
    - id: Coordinates
      type: System.Nullable{GoogleMapsWrapper.Types.GpsCoordinate}
      description: The GPS coordinate for the request.
    - id: AssociatedData
      type: System.Object
      description: Associated information about the data or it's source. This contains the IResponse.
    content.vb: Public Sub New(ElevationMeters As Double, Resolution As Double, ElevationFeet As Double, Coordinates As GpsCoordinate?, AssociatedData As Object)
  overload: GoogleMapsWrapper.Containers.ElevationContainer.#ctor*
  nameWithType.vb: ElevationContainer.New(Double, Double, Double, GpsCoordinate?, Object)
  fullName.vb: GoogleMapsWrapper.Containers.ElevationContainer.New(Double, Double, Double, GoogleMapsWrapper.Types.GpsCoordinate?, Object)
  name.vb: New(Double, Double, Double, GpsCoordinate?, Object)
- uid: GoogleMapsWrapper.Containers.ElevationContainer.ElevationMeters
  commentId: P:GoogleMapsWrapper.Containers.ElevationContainer.ElevationMeters
  id: ElevationMeters
  parent: GoogleMapsWrapper.Containers.ElevationContainer
  langs:
  - csharp
  - vb
  name: ElevationMeters
  nameWithType: ElevationContainer.ElevationMeters
  fullName: GoogleMapsWrapper.Containers.ElevationContainer.ElevationMeters
  type: Property
  source:
    remote:
      path: GoogleMapsApi/Containers/ElevationContainer.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: ElevationMeters
    path: ../../Containers/ElevationContainer.cs
    startLine: 23
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Containers
  summary: The elevation in meters.
  example: []
  syntax:
    content: public double ElevationMeters { get; init; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property ElevationMeters As Double
  overload: GoogleMapsWrapper.Containers.ElevationContainer.ElevationMeters*
- uid: GoogleMapsWrapper.Containers.ElevationContainer.Resolution
  commentId: P:GoogleMapsWrapper.Containers.ElevationContainer.Resolution
  id: Resolution
  parent: GoogleMapsWrapper.Containers.ElevationContainer
  langs:
  - csharp
  - vb
  name: Resolution
  nameWithType: ElevationContainer.Resolution
  fullName: GoogleMapsWrapper.Containers.ElevationContainer.Resolution
  type: Property
  source:
    remote:
      path: GoogleMapsApi/Containers/ElevationContainer.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: Resolution
    path: ../../Containers/ElevationContainer.cs
    startLine: 26
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Containers
  summary: >-
    Indicates the maximum distance between data points 
            from which the elevation was interpolated, in meters. 
            This property is acquired from the JSON response's 'administrative_area_level_1' property.
  example: []
  syntax:
    content: public double Resolution { get; init; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Resolution As Double
  overload: GoogleMapsWrapper.Containers.ElevationContainer.Resolution*
- uid: GoogleMapsWrapper.Containers.ElevationContainer.ElevationFeet
  commentId: P:GoogleMapsWrapper.Containers.ElevationContainer.ElevationFeet
  id: ElevationFeet
  parent: GoogleMapsWrapper.Containers.ElevationContainer
  langs:
  - csharp
  - vb
  name: ElevationFeet
  nameWithType: ElevationContainer.ElevationFeet
  fullName: GoogleMapsWrapper.Containers.ElevationContainer.ElevationFeet
  type: Property
  source:
    remote:
      path: GoogleMapsApi/Containers/ElevationContainer.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: ElevationFeet
    path: ../../Containers/ElevationContainer.cs
    startLine: 29
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Containers
  summary: The elevation in feet. This property is mathematically converted and not instrinsic to the API.
  example: []
  syntax:
    content: public double ElevationFeet { get; init; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property ElevationFeet As Double
  overload: GoogleMapsWrapper.Containers.ElevationContainer.ElevationFeet*
- uid: GoogleMapsWrapper.Containers.ElevationContainer.Coordinates
  commentId: P:GoogleMapsWrapper.Containers.ElevationContainer.Coordinates
  id: Coordinates
  parent: GoogleMapsWrapper.Containers.ElevationContainer
  langs:
  - csharp
  - vb
  name: Coordinates
  nameWithType: ElevationContainer.Coordinates
  fullName: GoogleMapsWrapper.Containers.ElevationContainer.Coordinates
  type: Property
  source:
    remote:
      path: GoogleMapsApi/Containers/ElevationContainer.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: Coordinates
    path: ../../Containers/ElevationContainer.cs
    startLine: 31
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Containers
  summary: The GPS coordinate for the request.
  example: []
  syntax:
    content: public GpsCoordinate? Coordinates { get; init; }
    parameters: []
    return:
      type: System.Nullable{GoogleMapsWrapper.Types.GpsCoordinate}
    content.vb: Public Property Coordinates As GpsCoordinate?
  overload: GoogleMapsWrapper.Containers.ElevationContainer.Coordinates*
- uid: GoogleMapsWrapper.Containers.ElevationContainer.AssociatedData
  commentId: P:GoogleMapsWrapper.Containers.ElevationContainer.AssociatedData
  id: AssociatedData
  parent: GoogleMapsWrapper.Containers.ElevationContainer
  langs:
  - csharp
  - vb
  name: AssociatedData
  nameWithType: ElevationContainer.AssociatedData
  fullName: GoogleMapsWrapper.Containers.ElevationContainer.AssociatedData
  type: Property
  source:
    remote:
      path: GoogleMapsApi/Containers/ElevationContainer.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: AssociatedData
    path: ../../Containers/ElevationContainer.cs
    startLine: 33
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.Containers
  summary: Associated information about the data or it's source. This contains the IResponse.
  example: []
  syntax:
    content: public object? AssociatedData { get; init; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property AssociatedData As Object
  overload: GoogleMapsWrapper.Containers.ElevationContainer.AssociatedData*
references:
- uid: GoogleMapsWrapper.Containers
  commentId: N:GoogleMapsWrapper.Containers
  href: GoogleMapsWrapper.html
  name: GoogleMapsWrapper.Containers
  nameWithType: GoogleMapsWrapper.Containers
  fullName: GoogleMapsWrapper.Containers
  spec.csharp:
  - uid: GoogleMapsWrapper
    name: GoogleMapsWrapper
    href: GoogleMapsWrapper.html
  - name: .
  - uid: GoogleMapsWrapper.Containers
    name: Containers
    href: GoogleMapsWrapper.Containers.html
  spec.vb:
  - uid: GoogleMapsWrapper
    name: GoogleMapsWrapper
    href: GoogleMapsWrapper.html
  - name: .
  - uid: GoogleMapsWrapper.Containers
    name: Containers
    href: GoogleMapsWrapper.Containers.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: GoogleMapsWrapper.Containers.IContainer
  commentId: T:GoogleMapsWrapper.Containers.IContainer
  parent: GoogleMapsWrapper.Containers
  href: GoogleMapsWrapper.Containers.IContainer.html
  name: IContainer
  nameWithType: IContainer
  fullName: GoogleMapsWrapper.Containers.IContainer
- uid: System.IEquatable{GoogleMapsWrapper.Containers.ElevationContainer}
  commentId: T:System.IEquatable{GoogleMapsWrapper.Containers.ElevationContainer}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<ElevationContainer>
  nameWithType: IEquatable<ElevationContainer>
  fullName: System.IEquatable<GoogleMapsWrapper.Containers.ElevationContainer>
  nameWithType.vb: IEquatable(Of ElevationContainer)
  fullName.vb: System.IEquatable(Of GoogleMapsWrapper.Containers.ElevationContainer)
  name.vb: IEquatable(Of ElevationContainer)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: GoogleMapsWrapper.Containers.ElevationContainer
    name: ElevationContainer
    href: GoogleMapsWrapper.Containers.ElevationContainer.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: GoogleMapsWrapper.Containers.ElevationContainer
    name: ElevationContainer
    href: GoogleMapsWrapper.Containers.ElevationContainer.html
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: GoogleMapsWrapper.Containers.ElevationContainer.#ctor*
  commentId: Overload:GoogleMapsWrapper.Containers.ElevationContainer.#ctor
  href: GoogleMapsWrapper.Containers.ElevationContainer.html#GoogleMapsWrapper_Containers_ElevationContainer__ctor_System_Double_System_Double_System_Double_System_Nullable_GoogleMapsWrapper_Types_GpsCoordinate__System_Object_
  name: ElevationContainer
  nameWithType: ElevationContainer.ElevationContainer
  fullName: GoogleMapsWrapper.Containers.ElevationContainer.ElevationContainer
  nameWithType.vb: ElevationContainer.New
  fullName.vb: GoogleMapsWrapper.Containers.ElevationContainer.New
  name.vb: New
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: System.Nullable{GoogleMapsWrapper.Types.GpsCoordinate}
  commentId: T:System.Nullable{GoogleMapsWrapper.Types.GpsCoordinate}
  parent: System
  definition: System.Nullable`1
  href: GoogleMapsWrapper.Types.GpsCoordinate.html
  name: GpsCoordinate?
  nameWithType: GpsCoordinate?
  fullName: GoogleMapsWrapper.Types.GpsCoordinate?
  spec.csharp:
  - uid: GoogleMapsWrapper.Types.GpsCoordinate
    name: GpsCoordinate
    href: GoogleMapsWrapper.Types.GpsCoordinate.html
  - name: '?'
  spec.vb:
  - uid: GoogleMapsWrapper.Types.GpsCoordinate
    name: GpsCoordinate
    href: GoogleMapsWrapper.Types.GpsCoordinate.html
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: GoogleMapsWrapper.Containers.ElevationContainer.ElevationMeters*
  commentId: Overload:GoogleMapsWrapper.Containers.ElevationContainer.ElevationMeters
  href: GoogleMapsWrapper.Containers.ElevationContainer.html#GoogleMapsWrapper_Containers_ElevationContainer_ElevationMeters
  name: ElevationMeters
  nameWithType: ElevationContainer.ElevationMeters
  fullName: GoogleMapsWrapper.Containers.ElevationContainer.ElevationMeters
- uid: GoogleMapsWrapper.Containers.ElevationContainer.Resolution*
  commentId: Overload:GoogleMapsWrapper.Containers.ElevationContainer.Resolution
  href: GoogleMapsWrapper.Containers.ElevationContainer.html#GoogleMapsWrapper_Containers_ElevationContainer_Resolution
  name: Resolution
  nameWithType: ElevationContainer.Resolution
  fullName: GoogleMapsWrapper.Containers.ElevationContainer.Resolution
- uid: GoogleMapsWrapper.Containers.ElevationContainer.ElevationFeet*
  commentId: Overload:GoogleMapsWrapper.Containers.ElevationContainer.ElevationFeet
  href: GoogleMapsWrapper.Containers.ElevationContainer.html#GoogleMapsWrapper_Containers_ElevationContainer_ElevationFeet
  name: ElevationFeet
  nameWithType: ElevationContainer.ElevationFeet
  fullName: GoogleMapsWrapper.Containers.ElevationContainer.ElevationFeet
- uid: GoogleMapsWrapper.Containers.ElevationContainer.Coordinates*
  commentId: Overload:GoogleMapsWrapper.Containers.ElevationContainer.Coordinates
  href: GoogleMapsWrapper.Containers.ElevationContainer.html#GoogleMapsWrapper_Containers_ElevationContainer_Coordinates
  name: Coordinates
  nameWithType: ElevationContainer.Coordinates
  fullName: GoogleMapsWrapper.Containers.ElevationContainer.Coordinates
- uid: GoogleMapsWrapper.Containers.ElevationContainer.AssociatedData*
  commentId: Overload:GoogleMapsWrapper.Containers.ElevationContainer.AssociatedData
  href: GoogleMapsWrapper.Containers.ElevationContainer.html#GoogleMapsWrapper_Containers_ElevationContainer_AssociatedData
  name: AssociatedData
  nameWithType: ElevationContainer.AssociatedData
  fullName: GoogleMapsWrapper.Containers.ElevationContainer.AssociatedData

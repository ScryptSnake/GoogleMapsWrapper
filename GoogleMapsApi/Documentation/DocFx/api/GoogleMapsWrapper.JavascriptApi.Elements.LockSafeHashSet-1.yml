### YamlMime:ManagedReference
items:
- uid: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1
  commentId: T:GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1
  id: LockSafeHashSet`1
  parent: GoogleMapsWrapper.JavascriptApi.Elements
  children:
  - GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Boolean)
  - GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Add(`0,System.Boolean)
  - GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.AddOrReplace(`0)
  - GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Clear
  - GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Contains(`0)
  - GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Items
  - GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Remove(`0)
  - GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Replace(`0)
  langs:
  - csharp
  - vb
  name: LockSafeHashSet<T>
  nameWithType: LockSafeHashSet<T>
  fullName: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet<T>
  type: Class
  source:
    remote:
      path: GoogleMapsApi/JavascriptApi/Elements/LockSafeHashSet.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: LockSafeHashSet
    path: ../../JavascriptApi/Elements/LockSafeHashSet.cs
    startLine: 15
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.JavascriptApi.Elements
  summary: A HashSet that is modified within a thread lock mechanism.
  example: []
  syntax:
    content: public class LockSafeHashSet<T>
    typeParameters:
    - id: T
      description: >-
        The type of object to store in the hash set. Null ref types are rejected during Add method.
           Note: the type should have an IEqualityComparer<code class="typeparamref">T</code> for this hashset to determine equality.
           The equality comparer used for a given type can be checked with: EqualityComparer<code class="typeparamref">T</code>.Default
    content.vb: Public Class LockSafeHashSet(Of T)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: LockSafeHashSet(Of T)
  fullName.vb: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet(Of T)
  name.vb: LockSafeHashSet(Of T)
- uid: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Items
  commentId: P:GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Items
  id: Items
  parent: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1
  langs:
  - csharp
  - vb
  name: Items
  nameWithType: LockSafeHashSet<T>.Items
  fullName: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet<T>.Items
  type: Property
  source:
    remote:
      path: GoogleMapsApi/JavascriptApi/Elements/LockSafeHashSet.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: Items
    path: ../../JavascriptApi/Elements/LockSafeHashSet.cs
    startLine: 18
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.JavascriptApi.Elements
  syntax:
    content: public IReadOnlyList<T> Items { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{{T}}
    content.vb: Public ReadOnly Property Items As IReadOnlyList(Of T)
  overload: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Items*
  nameWithType.vb: LockSafeHashSet(Of T).Items
  fullName.vb: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet(Of T).Items
- uid: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Boolean)
  commentId: M:GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Boolean)
  id: '#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Boolean)'
  parent: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1
  langs:
  - csharp
  - vb
  name: LockSafeHashSet(IEqualityComparer<T>, bool)
  nameWithType: LockSafeHashSet<T>.LockSafeHashSet(IEqualityComparer<T>, bool)
  fullName: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet<T>.LockSafeHashSet(System.Collections.Generic.IEqualityComparer<T>, bool)
  type: Constructor
  source:
    remote:
      path: GoogleMapsApi/JavascriptApi/Elements/LockSafeHashSet.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: .ctor
    path: ../../JavascriptApi/Elements/LockSafeHashSet.cs
    startLine: 24
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.JavascriptApi.Elements
  syntax:
    content: public LockSafeHashSet(IEqualityComparer<T> comparer, bool ignoreExistsException = false)
    parameters:
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{T}}
    - id: ignoreExistsException
      type: System.Boolean
    content.vb: Public Sub New(comparer As IEqualityComparer(Of T), ignoreExistsException As Boolean = False)
  overload: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.#ctor*
  nameWithType.vb: LockSafeHashSet(Of T).New(IEqualityComparer(Of T), Boolean)
  fullName.vb: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet(Of T).New(System.Collections.Generic.IEqualityComparer(Of T), Boolean)
  name.vb: New(IEqualityComparer(Of T), Boolean)
- uid: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Add(`0,System.Boolean)
  commentId: M:GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Add(`0,System.Boolean)
  id: Add(`0,System.Boolean)
  parent: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1
  langs:
  - csharp
  - vb
  name: Add(T, bool)
  nameWithType: LockSafeHashSet<T>.Add(T, bool)
  fullName: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet<T>.Add(T, bool)
  type: Method
  source:
    remote:
      path: GoogleMapsApi/JavascriptApi/Elements/LockSafeHashSet.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: Add
    path: ../../JavascriptApi/Elements/LockSafeHashSet.cs
    startLine: 37
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.JavascriptApi.Elements
  summary: Add item.
  example: []
  syntax:
    content: public void Add(T item, bool throwIfExists = true)
    parameters:
    - id: item
      type: '{T}'
      description: ''
    - id: throwIfExists
      type: System.Boolean
      description: Throw exception if item exists. Else ignore quietly.
    content.vb: Public Sub Add(item As T, throwIfExists As Boolean = True)
  overload: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: ''
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: ''
  nameWithType.vb: LockSafeHashSet(Of T).Add(T, Boolean)
  fullName.vb: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet(Of T).Add(T, Boolean)
  name.vb: Add(T, Boolean)
- uid: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.AddOrReplace(`0)
  commentId: M:GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.AddOrReplace(`0)
  id: AddOrReplace(`0)
  parent: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1
  langs:
  - csharp
  - vb
  name: AddOrReplace(T)
  nameWithType: LockSafeHashSet<T>.AddOrReplace(T)
  fullName: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet<T>.AddOrReplace(T)
  type: Method
  source:
    remote:
      path: GoogleMapsApi/JavascriptApi/Elements/LockSafeHashSet.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: AddOrReplace
    path: ../../JavascriptApi/Elements/LockSafeHashSet.cs
    startLine: 54
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.JavascriptApi.Elements
  summary: Add or replace item.
  example: []
  syntax:
    content: public void AddOrReplace(T item)
    parameters:
    - id: item
      type: '{T}'
      description: ''
    content.vb: Public Sub AddOrReplace(item As T)
  overload: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.AddOrReplace*
  nameWithType.vb: LockSafeHashSet(Of T).AddOrReplace(T)
  fullName.vb: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet(Of T).AddOrReplace(T)
- uid: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Remove(`0)
  commentId: M:GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Remove(`0)
  id: Remove(`0)
  parent: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1
  langs:
  - csharp
  - vb
  name: Remove(T)
  nameWithType: LockSafeHashSet<T>.Remove(T)
  fullName: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet<T>.Remove(T)
  type: Method
  source:
    remote:
      path: GoogleMapsApi/JavascriptApi/Elements/LockSafeHashSet.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: Remove
    path: ../../JavascriptApi/Elements/LockSafeHashSet.cs
    startLine: 69
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.JavascriptApi.Elements
  summary: Removes item from set.
  example: []
  syntax:
    content: public void Remove(T item)
    parameters:
    - id: item
      type: '{T}'
      description: Ignored if doesn't exist.
    content.vb: Public Sub Remove(item As T)
  overload: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: ''
  nameWithType.vb: LockSafeHashSet(Of T).Remove(T)
  fullName.vb: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet(Of T).Remove(T)
- uid: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Replace(`0)
  commentId: M:GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Replace(`0)
  id: Replace(`0)
  parent: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1
  langs:
  - csharp
  - vb
  name: Replace(T)
  nameWithType: LockSafeHashSet<T>.Replace(T)
  fullName: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet<T>.Replace(T)
  type: Method
  source:
    remote:
      path: GoogleMapsApi/JavascriptApi/Elements/LockSafeHashSet.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: Replace
    path: ../../JavascriptApi/Elements/LockSafeHashSet.cs
    startLine: 82
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.JavascriptApi.Elements
  summary: Replace an item in the set with a new item. Existing item is determined by the comparer.
  example: []
  syntax:
    content: public void Replace(T item)
    parameters:
    - id: item
      type: '{T}'
      description: ''
    content.vb: Public Sub Replace(item As T)
  overload: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Replace*
  nameWithType.vb: LockSafeHashSet(Of T).Replace(T)
  fullName.vb: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet(Of T).Replace(T)
- uid: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Contains(`0)
  commentId: M:GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Contains(`0)
  id: Contains(`0)
  parent: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1
  langs:
  - csharp
  - vb
  name: Contains(T)
  nameWithType: LockSafeHashSet<T>.Contains(T)
  fullName: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet<T>.Contains(T)
  type: Method
  source:
    remote:
      path: GoogleMapsApi/JavascriptApi/Elements/LockSafeHashSet.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: Contains
    path: ../../JavascriptApi/Elements/LockSafeHashSet.cs
    startLine: 89
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.JavascriptApi.Elements
  syntax:
    content: public bool Contains(T item)
    parameters:
    - id: item
      type: '{T}'
    return:
      type: System.Boolean
    content.vb: Public Function Contains(item As T) As Boolean
  overload: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Contains*
  nameWithType.vb: LockSafeHashSet(Of T).Contains(T)
  fullName.vb: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet(Of T).Contains(T)
- uid: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Clear
  commentId: M:GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Clear
  id: Clear
  parent: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: LockSafeHashSet<T>.Clear()
  fullName: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet<T>.Clear()
  type: Method
  source:
    remote:
      path: GoogleMapsApi/JavascriptApi/Elements/LockSafeHashSet.cs
      branch: master
      repo: https://github.com/ScryptSnake/GoogleMapsWrapper
    id: Clear
    path: ../../JavascriptApi/Elements/LockSafeHashSet.cs
    startLine: 91
  assemblies:
  - GoogleMapsWrapper
  namespace: GoogleMapsWrapper.JavascriptApi.Elements
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Clear*
  nameWithType.vb: LockSafeHashSet(Of T).Clear()
  fullName.vb: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet(Of T).Clear()
references:
- uid: GoogleMapsWrapper.JavascriptApi.Elements
  commentId: N:GoogleMapsWrapper.JavascriptApi.Elements
  href: GoogleMapsWrapper.html
  name: GoogleMapsWrapper.JavascriptApi.Elements
  nameWithType: GoogleMapsWrapper.JavascriptApi.Elements
  fullName: GoogleMapsWrapper.JavascriptApi.Elements
  spec.csharp:
  - uid: GoogleMapsWrapper
    name: GoogleMapsWrapper
    href: GoogleMapsWrapper.html
  - name: .
  - uid: GoogleMapsWrapper.JavascriptApi
    name: JavascriptApi
    href: GoogleMapsWrapper.JavascriptApi.html
  - name: .
  - uid: GoogleMapsWrapper.JavascriptApi.Elements
    name: Elements
    href: GoogleMapsWrapper.JavascriptApi.Elements.html
  spec.vb:
  - uid: GoogleMapsWrapper
    name: GoogleMapsWrapper
    href: GoogleMapsWrapper.html
  - name: .
  - uid: GoogleMapsWrapper.JavascriptApi
    name: JavascriptApi
    href: GoogleMapsWrapper.JavascriptApi.html
  - name: .
  - uid: GoogleMapsWrapper.JavascriptApi.Elements
    name: Elements
    href: GoogleMapsWrapper.JavascriptApi.Elements.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Items*
  commentId: Overload:GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Items
  href: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet-1.html#GoogleMapsWrapper_JavascriptApi_Elements_LockSafeHashSet_1_Items
  name: Items
  nameWithType: LockSafeHashSet<T>.Items
  fullName: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet<T>.Items
  nameWithType.vb: LockSafeHashSet(Of T).Items
  fullName.vb: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet(Of T).Items
- uid: System.Collections.Generic.IReadOnlyList{{T}}
  commentId: T:System.Collections.Generic.IReadOnlyList{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.#ctor*
  commentId: Overload:GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.#ctor
  href: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet-1.html#GoogleMapsWrapper_JavascriptApi_Elements_LockSafeHashSet_1__ctor_System_Collections_Generic_IEqualityComparer__0__System_Boolean_
  name: LockSafeHashSet
  nameWithType: LockSafeHashSet<T>.LockSafeHashSet
  fullName: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet<T>.LockSafeHashSet
  nameWithType.vb: LockSafeHashSet(Of T).New
  fullName.vb: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet(Of T).New
  name.vb: New
- uid: System.Collections.Generic.IEqualityComparer{{T}}
  commentId: T:System.Collections.Generic.IEqualityComparer{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.IEqualityComparer`1
  commentId: T:System.Collections.Generic.IEqualityComparer`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Add*
  commentId: Overload:GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Add
  href: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet-1.html#GoogleMapsWrapper_JavascriptApi_Elements_LockSafeHashSet_1_Add__0_System_Boolean_
  name: Add
  nameWithType: LockSafeHashSet<T>.Add
  fullName: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet<T>.Add
  nameWithType.vb: LockSafeHashSet(Of T).Add
  fullName.vb: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet(Of T).Add
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.AddOrReplace*
  commentId: Overload:GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.AddOrReplace
  href: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet-1.html#GoogleMapsWrapper_JavascriptApi_Elements_LockSafeHashSet_1_AddOrReplace__0_
  name: AddOrReplace
  nameWithType: LockSafeHashSet<T>.AddOrReplace
  fullName: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet<T>.AddOrReplace
  nameWithType.vb: LockSafeHashSet(Of T).AddOrReplace
  fullName.vb: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet(Of T).AddOrReplace
- uid: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Remove*
  commentId: Overload:GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Remove
  href: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet-1.html#GoogleMapsWrapper_JavascriptApi_Elements_LockSafeHashSet_1_Remove__0_
  name: Remove
  nameWithType: LockSafeHashSet<T>.Remove
  fullName: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet<T>.Remove
  nameWithType.vb: LockSafeHashSet(Of T).Remove
  fullName.vb: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet(Of T).Remove
- uid: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Replace*
  commentId: Overload:GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Replace
  href: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet-1.html#GoogleMapsWrapper_JavascriptApi_Elements_LockSafeHashSet_1_Replace__0_
  name: Replace
  nameWithType: LockSafeHashSet<T>.Replace
  fullName: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet<T>.Replace
  nameWithType.vb: LockSafeHashSet(Of T).Replace
  fullName.vb: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet(Of T).Replace
- uid: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Contains*
  commentId: Overload:GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Contains
  href: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet-1.html#GoogleMapsWrapper_JavascriptApi_Elements_LockSafeHashSet_1_Contains__0_
  name: Contains
  nameWithType: LockSafeHashSet<T>.Contains
  fullName: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet<T>.Contains
  nameWithType.vb: LockSafeHashSet(Of T).Contains
  fullName.vb: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet(Of T).Contains
- uid: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Clear*
  commentId: Overload:GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet`1.Clear
  href: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet-1.html#GoogleMapsWrapper_JavascriptApi_Elements_LockSafeHashSet_1_Clear
  name: Clear
  nameWithType: LockSafeHashSet<T>.Clear
  fullName: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet<T>.Clear
  nameWithType.vb: LockSafeHashSet(Of T).Clear
  fullName.vb: GoogleMapsWrapper.JavascriptApi.Elements.LockSafeHashSet(Of T).Clear
